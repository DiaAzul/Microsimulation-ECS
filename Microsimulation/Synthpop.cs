// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: synthpop.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Synthpop {

  /// <summary>Holder for reflection information generated from synthpop.proto</summary>
  public static partial class SynthpopReflection {

    #region Descriptor
    /// <summary>File descriptor for synthpop.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SynthpopReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5zeW50aHBvcC5wcm90bxIIc3ludGhwb3Ai3wMKClBvcHVsYXRpb24SJwoK",
            "aG91c2Vob2xkcxgBIAMoCzITLnN5bnRocG9wLkhvdXNlaG9sZBIgCgZwZW9w",
            "bGUYAiADKAsyEC5zeW50aHBvcC5QZXJzb24SSAoTdmVudWVzX3Blcl9hY3Rp",
            "dml0eRgDIAMoCzIrLnN5bnRocG9wLlBvcHVsYXRpb24uVmVudWVzUGVyQWN0",
            "aXZpdHlFbnRyeRI8Cg1pbmZvX3Blcl9tc29hGAQgAygLMiUuc3ludGhwb3Au",
            "UG9wdWxhdGlvbi5JbmZvUGVyTXNvYUVudHJ5EiQKCGxvY2tkb3duGAUgAigL",
            "MhIuc3ludGhwb3AuTG9ja2Rvd24SMAoQdGltZV91c2VfZGlhcmllcxgGIAMo",
            "CzIWLnN5bnRocG9wLlRpbWVVc2VEaWFyeRIMCgR5ZWFyGAcgAigNGk0KFlZl",
            "bnVlc1BlckFjdGl2aXR5RW50cnkSCwoDa2V5GAEgASgFEiIKBXZhbHVlGAIg",
            "ASgLMhMuc3ludGhwb3AuVmVudWVMaXN0OgI4ARpJChBJbmZvUGVyTXNvYUVu",
            "dHJ5EgsKA2tleRgBIAEoCRIkCgV2YWx1ZRgCIAEoCzIVLnN5bnRocG9wLklu",
            "Zm9QZXJNU09BOgI4ASJ3CglIb3VzZWhvbGQSCgoCaWQYASACKAQSEAoIbXNv",
            "YTExY2QYAiACKAkSDgoGb2ExMWNkGAMgAigJEg8KB21lbWJlcnMYBCADKAQS",
            "KwoHZGV0YWlscxgFIAIoCzIaLnN5bnRocG9wLkhvdXNlaG9sZERldGFpbHMi",
            "hgIKEEhvdXNlaG9sZERldGFpbHMSCwoDaGlkGAEgAigJEiAKBm5zc2VjOBgC",
            "IAEoDjIQLnN5bnRocG9wLk5zc2VjOBI3ChJhY2NvbW1vZGF0aW9uX3R5cGUY",
            "AyABKA4yGy5zeW50aHBvcC5BY2NvbW1vZGF0aW9uVHlwZRItCg1jb21tdW5h",
            "bF90eXBlGAQgASgOMhYuc3ludGhwb3AuQ29tbXVuYWxUeXBlEhEKCW51bV9y",
            "b29tcxgFIAEoBBIUCgxjZW50cmFsX2hlYXQYBiACKAgSIAoGdGVudXJlGAcg",
            "ASgOMhAuc3ludGhwb3AuVGVudXJlEhAKCG51bV9jYXJzGAggASgEIiwKCVZl",
            "bnVlTGlzdBIfCgZ2ZW51ZXMYASADKAsyDy5zeW50aHBvcC5WZW51ZSKSAQoL",
            "SW5mb1Blck1TT0ESHgoFc2hhcGUYASADKAsyDy5zeW50aHBvcC5Qb2ludBIS",
            "Cgpwb3B1bGF0aW9uGAIgAigEEiIKCWJ1aWxkaW5ncxgDIAMoCzIPLnN5bnRo",
            "cG9wLlBvaW50EisKEmZsb3dzX3Blcl9hY3Rpdml0eRgEIAMoCzIPLnN5bnRo",
            "cG9wLkZsb3dzIiwKBVBvaW50EhEKCWxvbmdpdHVkZRgBIAIoAhIQCghsYXRp",
            "dHVkZRgCIAIoAiK0AgoGUGVyc29uEgoKAmlkGAEgAigEEhEKCWhvdXNlaG9s",
            "ZBgCIAIoBBIRCgl3b3JrcGxhY2UYAyABKAQSKgoLaWRlbnRpZmllcnMYBCAC",
            "KAsyFS5zeW50aHBvcC5JZGVudGlmaWVycxIsCgxkZW1vZ3JhcGhpY3MYBSAC",
            "KAsyFi5zeW50aHBvcC5EZW1vZ3JhcGhpY3MSKAoKZW1wbG95bWVudBgGIAIo",
            "CzIULnN5bnRocG9wLkVtcGxveW1lbnQSIAoGaGVhbHRoGAcgAigLMhAuc3lu",
            "dGhwb3AuSGVhbHRoEiAKBmV2ZW50cxgIIAIoCzIQLnN5bnRocG9wLkV2ZW50",
            "cxIXCg93ZWVrZGF5X2RpYXJpZXMYCSADKA0SFwoPd2Vla2VuZF9kaWFyaWVz",
            "GAogAygNIlQKC0lkZW50aWZpZXJzEhAKCG9yaWdfcGlkGAEgAigJEhEKCWlk",
            "X3R1c19oaBgCIAIoAxIQCghpZF90dXNfcBgDIAIoAxIOCgZwaWRfaHMYBCAC",
            "KAMihwEKDERlbW9ncmFwaGljcxIaCgNzZXgYASACKA4yDS5zeW50aHBvcC5T",
            "ZXgSEQoJYWdlX3llYXJzGAIgAigNEiYKCWV0aG5pY2l0eRgDIAIoDjITLnN5",
            "bnRocG9wLkV0aG5pY2l0eRIgCgZuc3NlYzgYBCABKA4yEC5zeW50aHBvcC5O",
            "c3NlYzgilQEKCkVtcGxveW1lbnQSEQoJc2ljMWQyMDA3GAEgASgJEhEKCXNp",
            "YzJkMjAwNxgCIAEoBBIPCgdzb2MyMDEwGAMgASgEEiIKB3B3a3N0YXQYBCAC",
            "KA4yES5zeW50aHBvcC5Qd2tTdGF0EhUKDXNhbGFyeV95ZWFybHkYBSABKAIS",
            "FQoNc2FsYXJ5X2hvdXJseRgGIAEoAiL/AQoGSGVhbHRoEgsKA2JtaRgBIAEo",
            "AhIiChpoYXNfY2FyZGlvdmFzY3VsYXJfZGlzZWFzZRgCIAIoCBIUCgxoYXNf",
            "ZGlhYmV0ZXMYAyACKAgSHwoXaGFzX2hpZ2hfYmxvb2RfcHJlc3N1cmUYBCAC",
            "KAgSGgoSbnVtYmVyX21lZGljYXRpb25zGAUgASgEEjoKFHNlbGZfYXNzZXNz",
            "ZWRfaGVhbHRoGAYgASgOMhwuc3ludGhwb3AuU2VsZkFzc2Vzc2VkSGVhbHRo",
            "EjUKEWxpZmVfc2F0aXNmYWN0aW9uGAcgASgOMhouc3ludGhwb3AuTGlmZVNh",
            "dGlzZmFjdGlvbiKEAQoGRXZlbnRzEg0KBXNwb3J0GAEgAigCEg0KBXJ1Z2J5",
            "GAIgAigCEhEKCWNvbmNlcnRfbRgDIAIoAhIRCgljb25jZXJ0X2YYBCACKAIS",
            "EgoKY29uY2VydF9tcxgFIAIoAhISCgpjb25jZXJ0X2ZzGAYgAigCEg4KBm11",
            "c2V1bRgHIAIoAiJMCgVGbG93cxIkCghhY3Rpdml0eRgBIAIoDjISLnN5bnRo",
            "cG9wLkFjdGl2aXR5Eh0KBWZsb3dzGAIgAygLMg4uc3ludGhwb3AuRmxvdyIo",
            "CgRGbG93EhAKCHZlbnVlX2lkGAEgAigEEg4KBndlaWdodBgCIAIoASJpCgVW",
            "ZW51ZRIKCgJpZBgBIAIoBBIkCghhY3Rpdml0eRgCIAIoDjISLnN5bnRocG9w",
            "LkFjdGl2aXR5EiEKCGxvY2F0aW9uGAMgAigLMg8uc3ludGhwb3AuUG9pbnQS",
            "CwoDdXJuGAQgASgJIjYKCExvY2tkb3duEhIKCnN0YXJ0X2RhdGUYASACKAkS",
            "FgoOY2hhbmdlX3Blcl9kYXkYAiADKAIi/QMKDFRpbWVVc2VEaWFyeRILCgN1",
            "aWQYASACKAkSDwoHd2Vla2RheRgCIAIoCBIQCghkYXlfdHlwZRgDIAIoBRIN",
            "CgVtb250aBgEIAIoDRIRCglwd29ya2hvbWUYBSACKAISEgoKcGhvbWVvdGhl",
            "chgGIAIoAhINCgVwd29yaxgHIAIoAhIPCgdwc2Nob29sGAggAigCEg0KBXBz",
            "aG9wGAkgAigCEhEKCXBzZXJ2aWNlcxgKIAIoAhIQCghwbGVpc3VyZRgLIAIo",
            "AhIPCgdwZXNjb3J0GAwgAigCEhIKCnB0cmFuc3BvcnQYDSACKAISEwoLcGhv",
            "bWVfdG90YWwYDiACKAISFgoOcG5vdGhvbWVfdG90YWwYDyACKAISFgoOcHVu",
            "a25vd25fdG90YWwYECACKAISDgoGcG13YWxrGBEgAigCEg8KB3BtY3ljbGUY",
            "EiACKAISEQoJcG1wcml2YXRlGBMgAigCEhAKCHBtcHVibGljGBQgAigCEhEK",
            "CXBtdW5rbm93bhgVIAIoAhIaCgNzZXgYFiACKA4yDS5zeW50aHBvcC5TZXgS",
            "DgoGYWdlMzVnGBcgAigNEiAKBm5zc2VjOBgYIAEoDjIQLnN5bnRocG9wLk5z",
            "c2VjOBIiCgdwd2tzdGF0GBkgAigOMhEuc3ludGhwb3AuUHdrU3RhdCobCgNT",
            "ZXgSCAoETUFMRRABEgoKBkZFTUFMRRACKkIKCUV0aG5pY2l0eRIJCgVXSElU",
            "RRABEgkKBUJMQUNLEAISCQoFQVNJQU4QAxIJCgVNSVhFRBAEEgkKBU9USEVS",
            "EAUqTAoRQWNjb21tb2RhdGlvblR5cGUSDAoIREVUQUNIRUQQARIRCg1TRU1J",
            "X0RFVEFDSEVEEAISDAoIVEVSUkFDRUQQAxIICgRGTEFUEAQq3wUKDENvbW11",
            "bmFsVHlwZRIMCghDT01NVU5BTBAAEgsKB01FRElDQUwQARIPCgtNRURJQ0FM",
            "X05IUxACEhgKFE1FRElDQUxfTkhTX0hPU1BJVEFMEAMSFgoSTUVESUNBTF9O",
            "SFNfTUVOVEFMEAQSFQoRTUVESUNBTF9OSFNfT1RIRVIQBRIOCgpNRURJQ0FM",
            "X0xBEAYSFwoTTUVESUNBTF9MQV9DSElMRFJFThAHEiAKHE1FRElDQUxfTEFf",
            "Q0FSRV9IT01FX05VUlNJTkcQCBIjCh9NRURJQ0FMX0xBX0NBUkVfSE9NRV9O",
            "T19OVVJTSU5HEAkSFAoQTUVESUNBTF9MQV9PVEhFUhAKEhIKDk1FRElDQUxf",
            "U09DSUFMEAsSGQoVTUVESUNBTF9TT0NJQUxfSE9TVEVMEAwSGgoWTUVESUNB",
            "TF9TT0NJQUxfU0hFTFRFUhANEhEKDU1FRElDQUxfT1RIRVIQDhIjCh9NRURJ",
            "Q0FMX09USEVSX0NBUkVfSE9NRV9OVVJTSU5HEA8SJgoiTUVESUNBTF9PVEhF",
            "Ul9DQVJFX0hPTUVfTk9fTlVSU0lORxAQEhoKFk1FRElDQUxfT1RIRVJfQ0hJ",
            "TERSRU4QERIYChRNRURJQ0FMX09USEVSX01FTlRBTBASEhoKFk1FRElDQUxf",
            "T1RIRVJfSE9TUElUQUwQExIXChNNRURJQ0FMX09USEVSX09USEVSEBQSDQoJ",
            "Q09NX09USEVSEBUSCwoHREVGRU5TRRAWEgoKBlBSSVNPThAXEg0KCVBST0JB",
            "VElPThAYEg0KCURFVEVOVElPThAZEg0KCUVEVUNBVElPThAaEgkKBUhPVEVM",
            "EBsSCgoGSE9TVEVMEBwSCwoHSE9MSURBWRAdEgoKBlRSQVZFTBAeEg0KCVJF",
            "TElHSU9VUxAfEgkKBVNUQUZGECASDwoLT1RIRVJfT1RIRVIQIRIOCgpOT1Rf",
            "U1RBVEVEECIqZQoGVGVudXJlEg8KC09XTkVEX0ZVTExZEAESEgoOT1dORURf",
            "TU9SVEdBR0UQAhIPCgtSRU5URURfRlJFRRADEhEKDVJFTlRFRF9TT0NJQUwQ",
            "BBISCg5SRU5URURfUFJJVkFURRAFKnAKBk5zc2VjOBIKCgZISUdIRVIQARIJ",
            "CgVMT1dFUhACEhAKDElOVEVSTUVESUFURRADEgkKBVNNQUxMEAQSCQoFU1VQ",
            "RVIQBRIPCgtTRU1JUk9VVElORRAGEgsKB1JPVVRJTkUQBxIJCgVORVZFUhAI",
            "Kr4BCgdQd2tTdGF0EgYKAk5BEAASDwoLRU1QTE9ZRUVfRlQQARIPCgtFTVBM",
            "T1lFRV9QVBACEhMKD0VNUExPWUVFX1VOU1BFQxADEhEKDVNFTEZfRU1QTE9Z",
            "RUQQBBISCg5QV0tfVU5FTVBMT1lFRBAFEgsKB1JFVElSRUQQBhINCglIT01F",
            "TUFLRVIQBxIOCgpTVFVERU5UX0ZUEAgSEgoOTE9OR19URVJNX1NJQ0sQCRIN",
            "CglQV0tfT1RIRVIQCipOChJTZWxmQXNzZXNzZWRIZWFsdGgSDQoJVkVSWV9H",
            "T09EEAESCAoER09PRBACEggKBEZBSVIQAxIHCgNCQUQQBBIMCghWRVJZX0JB",
            "RBAFKkAKEExpZmVTYXRpc2ZhY3Rpb24SBwoDTE9XEAESCgoGTUVESVVNEAIS",
            "CAoESElHSBADEg0KCVZFUllfSElHSBAEKlQKCEFjdGl2aXR5EgoKBlJFVEFJ",
            "TBAAEhIKDlBSSU1BUllfU0NIT09MEAESFAoQU0VDT05EQVJZX1NDSE9PTBAC",
            "EggKBEhPTUUQAxIICgRXT1JLEAQ="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Synthpop.Sex), typeof(global::Synthpop.Ethnicity), typeof(global::Synthpop.AccommodationType), typeof(global::Synthpop.CommunalType), typeof(global::Synthpop.Tenure), typeof(global::Synthpop.Nssec8), typeof(global::Synthpop.PwkStat), typeof(global::Synthpop.SelfAssessedHealth), typeof(global::Synthpop.LifeSatisfaction), typeof(global::Synthpop.Activity), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.Population), global::Synthpop.Population.Parser, new[]{ "Households", "People", "VenuesPerActivity", "InfoPerMsoa", "Lockdown", "TimeUseDiaries", "Year" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.Household), global::Synthpop.Household.Parser, new[]{ "Id", "Msoa11Cd", "Oa11Cd", "Members", "Details" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.HouseholdDetails), global::Synthpop.HouseholdDetails.Parser, new[]{ "Hid", "Nssec8", "AccommodationType", "CommunalType", "NumRooms", "CentralHeat", "Tenure", "NumCars" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.VenueList), global::Synthpop.VenueList.Parser, new[]{ "Venues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.InfoPerMSOA), global::Synthpop.InfoPerMSOA.Parser, new[]{ "Shape", "Population", "Buildings", "FlowsPerActivity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.Point), global::Synthpop.Point.Parser, new[]{ "Longitude", "Latitude" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.Person), global::Synthpop.Person.Parser, new[]{ "Id", "Household", "Workplace", "Identifiers", "Demographics", "Employment", "Health", "Events", "WeekdayDiaries", "WeekendDiaries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.Identifiers), global::Synthpop.Identifiers.Parser, new[]{ "OrigPid", "IdTusHh", "IdTusP", "PidHs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.Demographics), global::Synthpop.Demographics.Parser, new[]{ "Sex", "AgeYears", "Ethnicity", "Nssec8" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.Employment), global::Synthpop.Employment.Parser, new[]{ "Sic1D2007", "Sic2D2007", "Soc2010", "Pwkstat", "SalaryYearly", "SalaryHourly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.Health), global::Synthpop.Health.Parser, new[]{ "Bmi", "HasCardiovascularDisease", "HasDiabetes", "HasHighBloodPressure", "NumberMedications", "SelfAssessedHealth", "LifeSatisfaction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.Events), global::Synthpop.Events.Parser, new[]{ "Sport", "Rugby", "ConcertM", "ConcertF", "ConcertMs", "ConcertFs", "Museum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.Flows), global::Synthpop.Flows.Parser, new[]{ "Activity", "Flows_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.Flow), global::Synthpop.Flow.Parser, new[]{ "VenueId", "Weight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.Venue), global::Synthpop.Venue.Parser, new[]{ "Id", "Activity", "Location", "Urn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.Lockdown), global::Synthpop.Lockdown.Parser, new[]{ "StartDate", "ChangePerDay" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Synthpop.TimeUseDiary), global::Synthpop.TimeUseDiary.Parser, new[]{ "Uid", "Weekday", "DayType", "Month", "Pworkhome", "Phomeother", "Pwork", "Pschool", "Pshop", "Pservices", "Pleisure", "Pescort", "Ptransport", "PhomeTotal", "PnothomeTotal", "PunknownTotal", "Pmwalk", "Pmcycle", "Pmprivate", "Pmpublic", "Pmunknown", "Sex", "Age35G", "Nssec8", "Pwkstat" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Sex {
    [pbr::OriginalName("MALE")] Male = 1,
    [pbr::OriginalName("FEMALE")] Female = 2,
  }

  public enum Ethnicity {
    [pbr::OriginalName("WHITE")] White = 1,
    [pbr::OriginalName("BLACK")] Black = 2,
    [pbr::OriginalName("ASIAN")] Asian = 3,
    [pbr::OriginalName("MIXED")] Mixed = 4,
    [pbr::OriginalName("OTHER")] Other = 5,
  }

  public enum AccommodationType {
    [pbr::OriginalName("DETACHED")] Detached = 1,
    [pbr::OriginalName("SEMI_DETACHED")] SemiDetached = 2,
    [pbr::OriginalName("TERRACED")] Terraced = 3,
    [pbr::OriginalName("FLAT")] Flat = 4,
  }

  public enum CommunalType {
    [pbr::OriginalName("COMMUNAL")] Communal = 0,
    [pbr::OriginalName("MEDICAL")] Medical = 1,
    [pbr::OriginalName("MEDICAL_NHS")] MedicalNhs = 2,
    [pbr::OriginalName("MEDICAL_NHS_HOSPITAL")] MedicalNhsHospital = 3,
    [pbr::OriginalName("MEDICAL_NHS_MENTAL")] MedicalNhsMental = 4,
    [pbr::OriginalName("MEDICAL_NHS_OTHER")] MedicalNhsOther = 5,
    [pbr::OriginalName("MEDICAL_LA")] MedicalLa = 6,
    [pbr::OriginalName("MEDICAL_LA_CHILDREN")] MedicalLaChildren = 7,
    [pbr::OriginalName("MEDICAL_LA_CARE_HOME_NURSING")] MedicalLaCareHomeNursing = 8,
    [pbr::OriginalName("MEDICAL_LA_CARE_HOME_NO_NURSING")] MedicalLaCareHomeNoNursing = 9,
    [pbr::OriginalName("MEDICAL_LA_OTHER")] MedicalLaOther = 10,
    [pbr::OriginalName("MEDICAL_SOCIAL")] MedicalSocial = 11,
    [pbr::OriginalName("MEDICAL_SOCIAL_HOSTEL")] MedicalSocialHostel = 12,
    [pbr::OriginalName("MEDICAL_SOCIAL_SHELTER")] MedicalSocialShelter = 13,
    [pbr::OriginalName("MEDICAL_OTHER")] MedicalOther = 14,
    [pbr::OriginalName("MEDICAL_OTHER_CARE_HOME_NURSING")] MedicalOtherCareHomeNursing = 15,
    [pbr::OriginalName("MEDICAL_OTHER_CARE_HOME_NO_NURSING")] MedicalOtherCareHomeNoNursing = 16,
    [pbr::OriginalName("MEDICAL_OTHER_CHILDREN")] MedicalOtherChildren = 17,
    [pbr::OriginalName("MEDICAL_OTHER_MENTAL")] MedicalOtherMental = 18,
    [pbr::OriginalName("MEDICAL_OTHER_HOSPITAL")] MedicalOtherHospital = 19,
    [pbr::OriginalName("MEDICAL_OTHER_OTHER")] MedicalOtherOther = 20,
    [pbr::OriginalName("COM_OTHER")] ComOther = 21,
    [pbr::OriginalName("DEFENSE")] Defense = 22,
    [pbr::OriginalName("PRISON")] Prison = 23,
    [pbr::OriginalName("PROBATION")] Probation = 24,
    [pbr::OriginalName("DETENTION")] Detention = 25,
    [pbr::OriginalName("EDUCATION")] Education = 26,
    [pbr::OriginalName("HOTEL")] Hotel = 27,
    [pbr::OriginalName("HOSTEL")] Hostel = 28,
    [pbr::OriginalName("HOLIDAY")] Holiday = 29,
    [pbr::OriginalName("TRAVEL")] Travel = 30,
    [pbr::OriginalName("RELIGIOUS")] Religious = 31,
    [pbr::OriginalName("STAFF")] Staff = 32,
    [pbr::OriginalName("OTHER_OTHER")] OtherOther = 33,
    [pbr::OriginalName("NOT_STATED")] NotStated = 34,
  }

  public enum Tenure {
    [pbr::OriginalName("OWNED_FULLY")] OwnedFully = 1,
    [pbr::OriginalName("OWNED_MORTGAGE")] OwnedMortgage = 2,
    [pbr::OriginalName("RENTED_FREE")] RentedFree = 3,
    [pbr::OriginalName("RENTED_SOCIAL")] RentedSocial = 4,
    [pbr::OriginalName("RENTED_PRIVATE")] RentedPrivate = 5,
  }

  /// <summary>
  /// National Statistics socio-economic classification
  /// </summary>
  public enum Nssec8 {
    /// <summary>
    /// Higher managerial, administrative and professional occupations
    /// </summary>
    [pbr::OriginalName("HIGHER")] Higher = 1,
    /// <summary>
    /// Lower managerial, administrative and professional occupations
    /// </summary>
    [pbr::OriginalName("LOWER")] Lower = 2,
    /// <summary>
    /// Intermediate occupations
    /// </summary>
    [pbr::OriginalName("INTERMEDIATE")] Intermediate = 3,
    /// <summary>
    /// Small employers and own account workers
    /// </summary>
    [pbr::OriginalName("SMALL")] Small = 4,
    /// <summary>
    /// Lower supervisory and technical occupations
    /// </summary>
    [pbr::OriginalName("SUPER")] Super = 5,
    /// <summary>
    /// Semi-routine occupations
    /// </summary>
    [pbr::OriginalName("SEMIROUTINE")] Semiroutine = 6,
    /// <summary>
    /// Routine occupations
    /// </summary>
    [pbr::OriginalName("ROUTINE")] Routine = 7,
    /// <summary>
    /// Never worked and long-term unemployed
    /// </summary>
    [pbr::OriginalName("NEVER")] Never = 8,
  }

  /// <summary>
  /// Professional working status, from the time-use survey
  /// </summary>
  public enum PwkStat {
    /// <summary>
    /// Not applicable (age &lt; 16)
    /// </summary>
    [pbr::OriginalName("NA")] Na = 0,
    /// <summary>
    /// Full-time employee
    /// </summary>
    [pbr::OriginalName("EMPLOYEE_FT")] EmployeeFt = 1,
    /// <summary>
    /// Part-time employee
    /// </summary>
    [pbr::OriginalName("EMPLOYEE_PT")] EmployeePt = 2,
    /// <summary>
    /// Unspecified employee
    /// </summary>
    [pbr::OriginalName("EMPLOYEE_UNSPEC")] EmployeeUnspec = 3,
    /// <summary>
    /// Self-employed
    /// </summary>
    [pbr::OriginalName("SELF_EMPLOYED")] SelfEmployed = 4,
    /// <summary>
    /// Unemployed (note this has a PWK_ prefix due to protobuf scoping rules)
    /// </summary>
    [pbr::OriginalName("PWK_UNEMPLOYED")] PwkUnemployed = 5,
    /// <summary>
    /// Retired
    /// </summary>
    [pbr::OriginalName("RETIRED")] Retired = 6,
    /// <summary>
    /// Homemaker / maternity leave
    /// </summary>
    [pbr::OriginalName("HOMEMAKER")] Homemaker = 7,
    /// <summary>
    /// Full-time student
    /// </summary>
    [pbr::OriginalName("STUDENT_FT")] StudentFt = 8,
    /// <summary>
    /// Long-term sick / disability
    /// </summary>
    [pbr::OriginalName("LONG_TERM_SICK")] LongTermSick = 9,
    /// <summary>
    /// Other (note this has a PWK_ prefix due to protobuf scoping rules)
    /// </summary>
    [pbr::OriginalName("PWK_OTHER")] PwkOther = 10,
  }

  /// <summary>
  /// Self-assessed general health
  /// </summary>
  public enum SelfAssessedHealth {
    /// <summary>
    /// For Welsh adults, VERY_GOOD includes EXCELLENT
    /// </summary>
    [pbr::OriginalName("VERY_GOOD")] VeryGood = 1,
    [pbr::OriginalName("GOOD")] Good = 2,
    [pbr::OriginalName("FAIR")] Fair = 3,
    /// <summary>
    /// For Welsh adults, BAD includes VERY_BAD
    /// </summary>
    [pbr::OriginalName("BAD")] Bad = 4,
    [pbr::OriginalName("VERY_BAD")] VeryBad = 5,
  }

  /// <summary>
  /// Life satisfaction
  /// </summary>
  public enum LifeSatisfaction {
    [pbr::OriginalName("LOW")] Low = 1,
    [pbr::OriginalName("MEDIUM")] Medium = 2,
    [pbr::OriginalName("HIGH")] High = 3,
    [pbr::OriginalName("VERY_HIGH")] VeryHigh = 4,
  }

  public enum Activity {
    [pbr::OriginalName("RETAIL")] Retail = 0,
    [pbr::OriginalName("PRIMARY_SCHOOL")] PrimarySchool = 1,
    [pbr::OriginalName("SECONDARY_SCHOOL")] SecondarySchool = 2,
    [pbr::OriginalName("HOME")] Home = 3,
    [pbr::OriginalName("WORK")] Work = 4,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Population : pb::IMessage<Population>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Population> _parser = new pb::MessageParser<Population>(() => new Population());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Population> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Population() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Population(Population other) : this() {
      _hasBits0 = other._hasBits0;
      households_ = other.households_.Clone();
      people_ = other.people_.Clone();
      venuesPerActivity_ = other.venuesPerActivity_.Clone();
      infoPerMsoa_ = other.infoPerMsoa_.Clone();
      lockdown_ = other.lockdown_ != null ? other.lockdown_.Clone() : null;
      timeUseDiaries_ = other.timeUseDiaries_.Clone();
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Population Clone() {
      return new Population(this);
    }

    /// <summary>Field number for the "households" field.</summary>
    public const int HouseholdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Synthpop.Household> _repeated_households_codec
        = pb::FieldCodec.ForMessage(10, global::Synthpop.Household.Parser);
    private readonly pbc::RepeatedField<global::Synthpop.Household> households_ = new pbc::RepeatedField<global::Synthpop.Household>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Synthpop.Household> Households {
      get { return households_; }
    }

    /// <summary>Field number for the "people" field.</summary>
    public const int PeopleFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Synthpop.Person> _repeated_people_codec
        = pb::FieldCodec.ForMessage(18, global::Synthpop.Person.Parser);
    private readonly pbc::RepeatedField<global::Synthpop.Person> people_ = new pbc::RepeatedField<global::Synthpop.Person>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Synthpop.Person> People {
      get { return people_; }
    }

    /// <summary>Field number for the "venues_per_activity" field.</summary>
    public const int VenuesPerActivityFieldNumber = 3;
    private static readonly pbc::MapField<int, global::Synthpop.VenueList>.Codec _map_venuesPerActivity_codec
        = new pbc::MapField<int, global::Synthpop.VenueList>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Synthpop.VenueList.Parser), 26);
    private readonly pbc::MapField<int, global::Synthpop.VenueList> venuesPerActivity_ = new pbc::MapField<int, global::Synthpop.VenueList>();
    /// <summary>
    /// This is filled out per Activity enum value. The exception is for
    /// `Activity::Home`; see `households` for that.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::Synthpop.VenueList> VenuesPerActivity {
      get { return venuesPerActivity_; }
    }

    /// <summary>Field number for the "info_per_msoa" field.</summary>
    public const int InfoPerMsoaFieldNumber = 4;
    private static readonly pbc::MapField<string, global::Synthpop.InfoPerMSOA>.Codec _map_infoPerMsoa_codec
        = new pbc::MapField<string, global::Synthpop.InfoPerMSOA>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Synthpop.InfoPerMSOA.Parser), 34);
    private readonly pbc::MapField<string, global::Synthpop.InfoPerMSOA> infoPerMsoa_ = new pbc::MapField<string, global::Synthpop.InfoPerMSOA>();
    /// <summary>
    /// Keyed by MSOA11CD
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Synthpop.InfoPerMSOA> InfoPerMsoa {
      get { return infoPerMsoa_; }
    }

    /// <summary>Field number for the "lockdown" field.</summary>
    public const int LockdownFieldNumber = 5;
    private global::Synthpop.Lockdown lockdown_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Lockdown Lockdown {
      get { return lockdown_; }
      set {
        lockdown_ = value;
      }
    }

    /// <summary>Field number for the "time_use_diaries" field.</summary>
    public const int TimeUseDiariesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Synthpop.TimeUseDiary> _repeated_timeUseDiaries_codec
        = pb::FieldCodec.ForMessage(50, global::Synthpop.TimeUseDiary.Parser);
    private readonly pbc::RepeatedField<global::Synthpop.TimeUseDiary> timeUseDiaries_ = new pbc::RepeatedField<global::Synthpop.TimeUseDiary>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Synthpop.TimeUseDiary> TimeUseDiaries {
      get { return timeUseDiaries_; }
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 7;
    private readonly static uint YearDefaultValue = 0;

    private uint year_;
    /// <summary>
    /// The year represented by this population
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Year {
      get { if ((_hasBits0 & 1) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 1;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Population);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Population other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!households_.Equals(other.households_)) return false;
      if(!people_.Equals(other.people_)) return false;
      if (!VenuesPerActivity.Equals(other.VenuesPerActivity)) return false;
      if (!InfoPerMsoa.Equals(other.InfoPerMsoa)) return false;
      if (!object.Equals(Lockdown, other.Lockdown)) return false;
      if(!timeUseDiaries_.Equals(other.timeUseDiaries_)) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= households_.GetHashCode();
      hash ^= people_.GetHashCode();
      hash ^= VenuesPerActivity.GetHashCode();
      hash ^= InfoPerMsoa.GetHashCode();
      if (lockdown_ != null) hash ^= Lockdown.GetHashCode();
      hash ^= timeUseDiaries_.GetHashCode();
      if (HasYear) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      households_.WriteTo(output, _repeated_households_codec);
      people_.WriteTo(output, _repeated_people_codec);
      venuesPerActivity_.WriteTo(output, _map_venuesPerActivity_codec);
      infoPerMsoa_.WriteTo(output, _map_infoPerMsoa_codec);
      if (lockdown_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Lockdown);
      }
      timeUseDiaries_.WriteTo(output, _repeated_timeUseDiaries_codec);
      if (HasYear) {
        output.WriteRawTag(56);
        output.WriteUInt32(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      households_.WriteTo(ref output, _repeated_households_codec);
      people_.WriteTo(ref output, _repeated_people_codec);
      venuesPerActivity_.WriteTo(ref output, _map_venuesPerActivity_codec);
      infoPerMsoa_.WriteTo(ref output, _map_infoPerMsoa_codec);
      if (lockdown_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Lockdown);
      }
      timeUseDiaries_.WriteTo(ref output, _repeated_timeUseDiaries_codec);
      if (HasYear) {
        output.WriteRawTag(56);
        output.WriteUInt32(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += households_.CalculateSize(_repeated_households_codec);
      size += people_.CalculateSize(_repeated_people_codec);
      size += venuesPerActivity_.CalculateSize(_map_venuesPerActivity_codec);
      size += infoPerMsoa_.CalculateSize(_map_infoPerMsoa_codec);
      if (lockdown_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lockdown);
      }
      size += timeUseDiaries_.CalculateSize(_repeated_timeUseDiaries_codec);
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Population other) {
      if (other == null) {
        return;
      }
      households_.Add(other.households_);
      people_.Add(other.people_);
      venuesPerActivity_.MergeFrom(other.venuesPerActivity_);
      infoPerMsoa_.MergeFrom(other.infoPerMsoa_);
      if (other.lockdown_ != null) {
        if (lockdown_ == null) {
          Lockdown = new global::Synthpop.Lockdown();
        }
        Lockdown.MergeFrom(other.Lockdown);
      }
      timeUseDiaries_.Add(other.timeUseDiaries_);
      if (other.HasYear) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            households_.AddEntriesFrom(input, _repeated_households_codec);
            break;
          }
          case 18: {
            people_.AddEntriesFrom(input, _repeated_people_codec);
            break;
          }
          case 26: {
            venuesPerActivity_.AddEntriesFrom(input, _map_venuesPerActivity_codec);
            break;
          }
          case 34: {
            infoPerMsoa_.AddEntriesFrom(input, _map_infoPerMsoa_codec);
            break;
          }
          case 42: {
            if (lockdown_ == null) {
              Lockdown = new global::Synthpop.Lockdown();
            }
            input.ReadMessage(Lockdown);
            break;
          }
          case 50: {
            timeUseDiaries_.AddEntriesFrom(input, _repeated_timeUseDiaries_codec);
            break;
          }
          case 56: {
            Year = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            households_.AddEntriesFrom(ref input, _repeated_households_codec);
            break;
          }
          case 18: {
            people_.AddEntriesFrom(ref input, _repeated_people_codec);
            break;
          }
          case 26: {
            venuesPerActivity_.AddEntriesFrom(ref input, _map_venuesPerActivity_codec);
            break;
          }
          case 34: {
            infoPerMsoa_.AddEntriesFrom(ref input, _map_infoPerMsoa_codec);
            break;
          }
          case 42: {
            if (lockdown_ == null) {
              Lockdown = new global::Synthpop.Lockdown();
            }
            input.ReadMessage(Lockdown);
            break;
          }
          case 50: {
            timeUseDiaries_.AddEntriesFrom(ref input, _repeated_timeUseDiaries_codec);
            break;
          }
          case 56: {
            Year = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Household : pb::IMessage<Household>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Household> _parser = new pb::MessageParser<Household>(() => new Household());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Household> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Household() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Household(Household other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      msoa11Cd_ = other.msoa11Cd_;
      oa11Cd_ = other.oa11Cd_;
      members_ = other.members_.Clone();
      details_ = other.details_ != null ? other.details_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Household Clone() {
      return new Household(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static ulong IdDefaultValue = 0UL;

    private ulong id_;
    /// <summary>
    /// This is the index into Population::households
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "msoa11cd" field.</summary>
    public const int Msoa11CdFieldNumber = 2;
    private readonly static string Msoa11CdDefaultValue = "";

    private string msoa11Cd_;
    /// <summary>
    /// 2011 MSOA code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Msoa11Cd {
      get { return msoa11Cd_ ?? Msoa11CdDefaultValue; }
      set {
        msoa11Cd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "msoa11cd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMsoa11Cd {
      get { return msoa11Cd_ != null; }
    }
    /// <summary>Clears the value of the "msoa11cd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMsoa11Cd() {
      msoa11Cd_ = null;
    }

    /// <summary>Field number for the "oa11cd" field.</summary>
    public const int Oa11CdFieldNumber = 3;
    private readonly static string Oa11CdDefaultValue = "";

    private string oa11Cd_;
    /// <summary>
    /// 2011 OA code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Oa11Cd {
      get { return oa11Cd_ ?? Oa11CdDefaultValue; }
      set {
        oa11Cd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "oa11cd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOa11Cd {
      get { return oa11Cd_ != null; }
    }
    /// <summary>Clears the value of the "oa11cd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOa11Cd() {
      oa11Cd_ = null;
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 4;
    private static readonly pb::FieldCodec<ulong> _repeated_members_codec
        = pb::FieldCodec.ForUInt64(32);
    private readonly pbc::RepeatedField<ulong> members_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// These IDs index into `Population::people`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> Members {
      get { return members_; }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 5;
    private global::Synthpop.HouseholdDetails details_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.HouseholdDetails Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Household);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Household other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Msoa11Cd != other.Msoa11Cd) return false;
      if (Oa11Cd != other.Oa11Cd) return false;
      if(!members_.Equals(other.members_)) return false;
      if (!object.Equals(Details, other.Details)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasMsoa11Cd) hash ^= Msoa11Cd.GetHashCode();
      if (HasOa11Cd) hash ^= Oa11Cd.GetHashCode();
      hash ^= members_.GetHashCode();
      if (details_ != null) hash ^= Details.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (HasMsoa11Cd) {
        output.WriteRawTag(18);
        output.WriteString(Msoa11Cd);
      }
      if (HasOa11Cd) {
        output.WriteRawTag(26);
        output.WriteString(Oa11Cd);
      }
      members_.WriteTo(output, _repeated_members_codec);
      if (details_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Details);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (HasMsoa11Cd) {
        output.WriteRawTag(18);
        output.WriteString(Msoa11Cd);
      }
      if (HasOa11Cd) {
        output.WriteRawTag(26);
        output.WriteString(Oa11Cd);
      }
      members_.WriteTo(ref output, _repeated_members_codec);
      if (details_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Details);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (HasMsoa11Cd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msoa11Cd);
      }
      if (HasOa11Cd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Oa11Cd);
      }
      size += members_.CalculateSize(_repeated_members_codec);
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Household other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasMsoa11Cd) {
        Msoa11Cd = other.Msoa11Cd;
      }
      if (other.HasOa11Cd) {
        Oa11Cd = other.Oa11Cd;
      }
      members_.Add(other.members_);
      if (other.details_ != null) {
        if (details_ == null) {
          Details = new global::Synthpop.HouseholdDetails();
        }
        Details.MergeFrom(other.Details);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Msoa11Cd = input.ReadString();
            break;
          }
          case 26: {
            Oa11Cd = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
          case 42: {
            if (details_ == null) {
              Details = new global::Synthpop.HouseholdDetails();
            }
            input.ReadMessage(Details);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Msoa11Cd = input.ReadString();
            break;
          }
          case 26: {
            Oa11Cd = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            members_.AddEntriesFrom(ref input, _repeated_members_codec);
            break;
          }
          case 42: {
            if (details_ == null) {
              Details = new global::Synthpop.HouseholdDetails();
            }
            input.ReadMessage(Details);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class HouseholdDetails : pb::IMessage<HouseholdDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HouseholdDetails> _parser = new pb::MessageParser<HouseholdDetails>(() => new HouseholdDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HouseholdDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HouseholdDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HouseholdDetails(HouseholdDetails other) : this() {
      _hasBits0 = other._hasBits0;
      hid_ = other.hid_;
      nssec8_ = other.nssec8_;
      accommodationType_ = other.accommodationType_;
      communalType_ = other.communalType_;
      numRooms_ = other.numRooms_;
      centralHeat_ = other.centralHeat_;
      tenure_ = other.tenure_;
      numCars_ = other.numCars_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HouseholdDetails Clone() {
      return new HouseholdDetails(this);
    }

    /// <summary>Field number for the "hid" field.</summary>
    public const int HidFieldNumber = 1;
    private readonly static string HidDefaultValue = "";

    private string hid_;
    /// <summary>
    //// Unique household ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Hid {
      get { return hid_ ?? HidDefaultValue; }
      set {
        hid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHid {
      get { return hid_ != null; }
    }
    /// <summary>Clears the value of the "hid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHid() {
      hid_ = null;
    }

    /// <summary>Field number for the "nssec8" field.</summary>
    public const int Nssec8FieldNumber = 2;
    private readonly static global::Synthpop.Nssec8 Nssec8DefaultValue = global::Synthpop.Nssec8.Higher;

    private global::Synthpop.Nssec8 nssec8_;
    /// <summary>
    /// National Statistics Socio-economic classification of the reference
    /// person of the household (LC4605, census 2011)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Nssec8 Nssec8 {
      get { if ((_hasBits0 & 1) != 0) { return nssec8_; } else { return Nssec8DefaultValue; } }
      set {
        _hasBits0 |= 1;
        nssec8_ = value;
      }
    }
    /// <summary>Gets whether the "nssec8" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNssec8 {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "nssec8" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNssec8() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "accommodation_type" field.</summary>
    public const int AccommodationTypeFieldNumber = 3;
    private readonly static global::Synthpop.AccommodationType AccommodationTypeDefaultValue = global::Synthpop.AccommodationType.Detached;

    private global::Synthpop.AccommodationType accommodationType_;
    /// <summary>
    /// Type of accommodation (based on LC4402EW, census 2011)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.AccommodationType AccommodationType {
      get { if ((_hasBits0 & 2) != 0) { return accommodationType_; } else { return AccommodationTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        accommodationType_ = value;
      }
    }
    /// <summary>Gets whether the "accommodation_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccommodationType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "accommodation_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccommodationType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "communal_type" field.</summary>
    public const int CommunalTypeFieldNumber = 4;
    private readonly static global::Synthpop.CommunalType CommunalTypeDefaultValue = global::Synthpop.CommunalType.Communal;

    private global::Synthpop.CommunalType communalType_;
    /// <summary>
    /// Type of communal establishment (based on QS420, census 2011)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.CommunalType CommunalType {
      get { if ((_hasBits0 & 4) != 0) { return communalType_; } else { return CommunalTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        communalType_ = value;
      }
    }
    /// <summary>Gets whether the "communal_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommunalType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "communal_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommunalType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "num_rooms" field.</summary>
    public const int NumRoomsFieldNumber = 5;
    private readonly static ulong NumRoomsDefaultValue = 0UL;

    private ulong numRooms_;
    /// <summary>
    /// Number of rooms in the accommodation capped at 6 (LC4404EW, census 2011)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong NumRooms {
      get { if ((_hasBits0 & 8) != 0) { return numRooms_; } else { return NumRoomsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        numRooms_ = value;
      }
    }
    /// <summary>Gets whether the "num_rooms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumRooms {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "num_rooms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumRooms() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "central_heat" field.</summary>
    public const int CentralHeatFieldNumber = 6;
    private readonly static bool CentralHeatDefaultValue = false;

    private bool centralHeat_;
    /// <summary>
    /// Presence of central heating (based on LC4402EW, census 2011)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CentralHeat {
      get { if ((_hasBits0 & 16) != 0) { return centralHeat_; } else { return CentralHeatDefaultValue; } }
      set {
        _hasBits0 |= 16;
        centralHeat_ = value;
      }
    }
    /// <summary>Gets whether the "central_heat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCentralHeat {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "central_heat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCentralHeat() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "tenure" field.</summary>
    public const int TenureFieldNumber = 7;
    private readonly static global::Synthpop.Tenure TenureDefaultValue = global::Synthpop.Tenure.OwnedFully;

    private global::Synthpop.Tenure tenure_;
    /// <summary>
    /// Tenure (based on LC4402EW, census 2011)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Tenure Tenure {
      get { if ((_hasBits0 & 32) != 0) { return tenure_; } else { return TenureDefaultValue; } }
      set {
        _hasBits0 |= 32;
        tenure_ = value;
      }
    }
    /// <summary>Gets whether the "tenure" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTenure {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "tenure" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTenure() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "num_cars" field.</summary>
    public const int NumCarsFieldNumber = 8;
    private readonly static ulong NumCarsDefaultValue = 0UL;

    private ulong numCars_;
    /// <summary>
    /// Number of cars capped at 3 (LC4202EW, census 2011)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong NumCars {
      get { if ((_hasBits0 & 64) != 0) { return numCars_; } else { return NumCarsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        numCars_ = value;
      }
    }
    /// <summary>Gets whether the "num_cars" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumCars {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "num_cars" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumCars() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HouseholdDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HouseholdDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hid != other.Hid) return false;
      if (Nssec8 != other.Nssec8) return false;
      if (AccommodationType != other.AccommodationType) return false;
      if (CommunalType != other.CommunalType) return false;
      if (NumRooms != other.NumRooms) return false;
      if (CentralHeat != other.CentralHeat) return false;
      if (Tenure != other.Tenure) return false;
      if (NumCars != other.NumCars) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHid) hash ^= Hid.GetHashCode();
      if (HasNssec8) hash ^= Nssec8.GetHashCode();
      if (HasAccommodationType) hash ^= AccommodationType.GetHashCode();
      if (HasCommunalType) hash ^= CommunalType.GetHashCode();
      if (HasNumRooms) hash ^= NumRooms.GetHashCode();
      if (HasCentralHeat) hash ^= CentralHeat.GetHashCode();
      if (HasTenure) hash ^= Tenure.GetHashCode();
      if (HasNumCars) hash ^= NumCars.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHid) {
        output.WriteRawTag(10);
        output.WriteString(Hid);
      }
      if (HasNssec8) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Nssec8);
      }
      if (HasAccommodationType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AccommodationType);
      }
      if (HasCommunalType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) CommunalType);
      }
      if (HasNumRooms) {
        output.WriteRawTag(40);
        output.WriteUInt64(NumRooms);
      }
      if (HasCentralHeat) {
        output.WriteRawTag(48);
        output.WriteBool(CentralHeat);
      }
      if (HasTenure) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Tenure);
      }
      if (HasNumCars) {
        output.WriteRawTag(64);
        output.WriteUInt64(NumCars);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHid) {
        output.WriteRawTag(10);
        output.WriteString(Hid);
      }
      if (HasNssec8) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Nssec8);
      }
      if (HasAccommodationType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AccommodationType);
      }
      if (HasCommunalType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) CommunalType);
      }
      if (HasNumRooms) {
        output.WriteRawTag(40);
        output.WriteUInt64(NumRooms);
      }
      if (HasCentralHeat) {
        output.WriteRawTag(48);
        output.WriteBool(CentralHeat);
      }
      if (HasTenure) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Tenure);
      }
      if (HasNumCars) {
        output.WriteRawTag(64);
        output.WriteUInt64(NumCars);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hid);
      }
      if (HasNssec8) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nssec8);
      }
      if (HasAccommodationType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AccommodationType);
      }
      if (HasCommunalType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommunalType);
      }
      if (HasNumRooms) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NumRooms);
      }
      if (HasCentralHeat) {
        size += 1 + 1;
      }
      if (HasTenure) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Tenure);
      }
      if (HasNumCars) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NumCars);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HouseholdDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasHid) {
        Hid = other.Hid;
      }
      if (other.HasNssec8) {
        Nssec8 = other.Nssec8;
      }
      if (other.HasAccommodationType) {
        AccommodationType = other.AccommodationType;
      }
      if (other.HasCommunalType) {
        CommunalType = other.CommunalType;
      }
      if (other.HasNumRooms) {
        NumRooms = other.NumRooms;
      }
      if (other.HasCentralHeat) {
        CentralHeat = other.CentralHeat;
      }
      if (other.HasTenure) {
        Tenure = other.Tenure;
      }
      if (other.HasNumCars) {
        NumCars = other.NumCars;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hid = input.ReadString();
            break;
          }
          case 16: {
            Nssec8 = (global::Synthpop.Nssec8) input.ReadEnum();
            break;
          }
          case 24: {
            AccommodationType = (global::Synthpop.AccommodationType) input.ReadEnum();
            break;
          }
          case 32: {
            CommunalType = (global::Synthpop.CommunalType) input.ReadEnum();
            break;
          }
          case 40: {
            NumRooms = input.ReadUInt64();
            break;
          }
          case 48: {
            CentralHeat = input.ReadBool();
            break;
          }
          case 56: {
            Tenure = (global::Synthpop.Tenure) input.ReadEnum();
            break;
          }
          case 64: {
            NumCars = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hid = input.ReadString();
            break;
          }
          case 16: {
            Nssec8 = (global::Synthpop.Nssec8) input.ReadEnum();
            break;
          }
          case 24: {
            AccommodationType = (global::Synthpop.AccommodationType) input.ReadEnum();
            break;
          }
          case 32: {
            CommunalType = (global::Synthpop.CommunalType) input.ReadEnum();
            break;
          }
          case 40: {
            NumRooms = input.ReadUInt64();
            break;
          }
          case 48: {
            CentralHeat = input.ReadBool();
            break;
          }
          case 56: {
            Tenure = (global::Synthpop.Tenure) input.ReadEnum();
            break;
          }
          case 64: {
            NumCars = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class VenueList : pb::IMessage<VenueList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VenueList> _parser = new pb::MessageParser<VenueList>(() => new VenueList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VenueList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VenueList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VenueList(VenueList other) : this() {
      venues_ = other.venues_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VenueList Clone() {
      return new VenueList(this);
    }

    /// <summary>Field number for the "venues" field.</summary>
    public const int VenuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Synthpop.Venue> _repeated_venues_codec
        = pb::FieldCodec.ForMessage(10, global::Synthpop.Venue.Parser);
    private readonly pbc::RepeatedField<global::Synthpop.Venue> venues_ = new pbc::RepeatedField<global::Synthpop.Venue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Synthpop.Venue> Venues {
      get { return venues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VenueList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VenueList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!venues_.Equals(other.venues_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= venues_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      venues_.WriteTo(output, _repeated_venues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      venues_.WriteTo(ref output, _repeated_venues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += venues_.CalculateSize(_repeated_venues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VenueList other) {
      if (other == null) {
        return;
      }
      venues_.Add(other.venues_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            venues_.AddEntriesFrom(input, _repeated_venues_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            venues_.AddEntriesFrom(ref input, _repeated_venues_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InfoPerMSOA : pb::IMessage<InfoPerMSOA>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfoPerMSOA> _parser = new pb::MessageParser<InfoPerMSOA>(() => new InfoPerMSOA());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InfoPerMSOA> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoPerMSOA() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoPerMSOA(InfoPerMSOA other) : this() {
      _hasBits0 = other._hasBits0;
      shape_ = other.shape_.Clone();
      population_ = other.population_;
      buildings_ = other.buildings_.Clone();
      flowsPerActivity_ = other.flowsPerActivity_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoPerMSOA Clone() {
      return new InfoPerMSOA(this);
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Synthpop.Point> _repeated_shape_codec
        = pb::FieldCodec.ForMessage(10, global::Synthpop.Point.Parser);
    private readonly pbc::RepeatedField<global::Synthpop.Point> shape_ = new pbc::RepeatedField<global::Synthpop.Point>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Synthpop.Point> Shape {
      get { return shape_; }
    }

    /// <summary>Field number for the "population" field.</summary>
    public const int PopulationFieldNumber = 2;
    private readonly static ulong PopulationDefaultValue = 0UL;

    private ulong population_;
    /// <summary>
    /// There's no relationship between this value and the people listed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Population {
      get { if ((_hasBits0 & 1) != 0) { return population_; } else { return PopulationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        population_ = value;
      }
    }
    /// <summary>Gets whether the "population" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPopulation {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "population" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPopulation() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "buildings" field.</summary>
    public const int BuildingsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Synthpop.Point> _repeated_buildings_codec
        = pb::FieldCodec.ForMessage(26, global::Synthpop.Point.Parser);
    private readonly pbc::RepeatedField<global::Synthpop.Point> buildings_ = new pbc::RepeatedField<global::Synthpop.Point>();
    /// <summary>
    /// All building centroids within this MSOA. May be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Synthpop.Point> Buildings {
      get { return buildings_; }
    }

    /// <summary>Field number for the "flows_per_activity" field.</summary>
    public const int FlowsPerActivityFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Synthpop.Flows> _repeated_flowsPerActivity_codec
        = pb::FieldCodec.ForMessage(34, global::Synthpop.Flows.Parser);
    private readonly pbc::RepeatedField<global::Synthpop.Flows> flowsPerActivity_ = new pbc::RepeatedField<global::Synthpop.Flows>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Synthpop.Flows> FlowsPerActivity {
      get { return flowsPerActivity_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InfoPerMSOA);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InfoPerMSOA other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!shape_.Equals(other.shape_)) return false;
      if (Population != other.Population) return false;
      if(!buildings_.Equals(other.buildings_)) return false;
      if(!flowsPerActivity_.Equals(other.flowsPerActivity_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= shape_.GetHashCode();
      if (HasPopulation) hash ^= Population.GetHashCode();
      hash ^= buildings_.GetHashCode();
      hash ^= flowsPerActivity_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      shape_.WriteTo(output, _repeated_shape_codec);
      if (HasPopulation) {
        output.WriteRawTag(16);
        output.WriteUInt64(Population);
      }
      buildings_.WriteTo(output, _repeated_buildings_codec);
      flowsPerActivity_.WriteTo(output, _repeated_flowsPerActivity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      shape_.WriteTo(ref output, _repeated_shape_codec);
      if (HasPopulation) {
        output.WriteRawTag(16);
        output.WriteUInt64(Population);
      }
      buildings_.WriteTo(ref output, _repeated_buildings_codec);
      flowsPerActivity_.WriteTo(ref output, _repeated_flowsPerActivity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (HasPopulation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Population);
      }
      size += buildings_.CalculateSize(_repeated_buildings_codec);
      size += flowsPerActivity_.CalculateSize(_repeated_flowsPerActivity_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InfoPerMSOA other) {
      if (other == null) {
        return;
      }
      shape_.Add(other.shape_);
      if (other.HasPopulation) {
        Population = other.Population;
      }
      buildings_.Add(other.buildings_);
      flowsPerActivity_.Add(other.flowsPerActivity_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
          case 16: {
            Population = input.ReadUInt64();
            break;
          }
          case 26: {
            buildings_.AddEntriesFrom(input, _repeated_buildings_codec);
            break;
          }
          case 34: {
            flowsPerActivity_.AddEntriesFrom(input, _repeated_flowsPerActivity_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            shape_.AddEntriesFrom(ref input, _repeated_shape_codec);
            break;
          }
          case 16: {
            Population = input.ReadUInt64();
            break;
          }
          case 26: {
            buildings_.AddEntriesFrom(ref input, _repeated_buildings_codec);
            break;
          }
          case 34: {
            flowsPerActivity_.AddEntriesFrom(ref input, _repeated_flowsPerActivity_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// In WGS84
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Point : pb::IMessage<Point>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Point> _parser = new pb::MessageParser<Point>(() => new Point());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Point> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Point() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Point(Point other) : this() {
      _hasBits0 = other._hasBits0;
      longitude_ = other.longitude_;
      latitude_ = other.latitude_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Point Clone() {
      return new Point(this);
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 1;
    private readonly static float LongitudeDefaultValue = 0F;

    private float longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Longitude {
      get { if ((_hasBits0 & 1) != 0) { return longitude_; } else { return LongitudeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        longitude_ = value;
      }
    }
    /// <summary>Gets whether the "longitude" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLongitude {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "longitude" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLongitude() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 2;
    private readonly static float LatitudeDefaultValue = 0F;

    private float latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Latitude {
      get { if ((_hasBits0 & 2) != 0) { return latitude_; } else { return LatitudeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        latitude_ = value;
      }
    }
    /// <summary>Gets whether the "latitude" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLatitude {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "latitude" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLatitude() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Point);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Point other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLongitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Longitude);
      if (HasLatitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Latitude);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLongitude) {
        output.WriteRawTag(13);
        output.WriteFloat(Longitude);
      }
      if (HasLatitude) {
        output.WriteRawTag(21);
        output.WriteFloat(Latitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLongitude) {
        output.WriteRawTag(13);
        output.WriteFloat(Longitude);
      }
      if (HasLatitude) {
        output.WriteRawTag(21);
        output.WriteFloat(Latitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLongitude) {
        size += 1 + 4;
      }
      if (HasLatitude) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Point other) {
      if (other == null) {
        return;
      }
      if (other.HasLongitude) {
        Longitude = other.Longitude;
      }
      if (other.HasLatitude) {
        Latitude = other.Latitude;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Longitude = input.ReadFloat();
            break;
          }
          case 21: {
            Latitude = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Longitude = input.ReadFloat();
            break;
          }
          case 21: {
            Latitude = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Person : pb::IMessage<Person>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Person> _parser = new pb::MessageParser<Person>(() => new Person());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Person> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Person() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Person(Person other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      household_ = other.household_;
      workplace_ = other.workplace_;
      identifiers_ = other.identifiers_ != null ? other.identifiers_.Clone() : null;
      demographics_ = other.demographics_ != null ? other.demographics_.Clone() : null;
      employment_ = other.employment_ != null ? other.employment_.Clone() : null;
      health_ = other.health_ != null ? other.health_.Clone() : null;
      events_ = other.events_ != null ? other.events_.Clone() : null;
      weekdayDiaries_ = other.weekdayDiaries_.Clone();
      weekendDiaries_ = other.weekendDiaries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Person Clone() {
      return new Person(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static ulong IdDefaultValue = 0UL;

    private ulong id_;
    /// <summary>
    /// This is the index into Population::people
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "household" field.</summary>
    public const int HouseholdFieldNumber = 2;
    private readonly static ulong HouseholdDefaultValue = 0UL;

    private ulong household_;
    /// <summary>
    /// This is the index into Population::households
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Household {
      get { if ((_hasBits0 & 2) != 0) { return household_; } else { return HouseholdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        household_ = value;
      }
    }
    /// <summary>Gets whether the "household" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHousehold {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "household" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHousehold() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "workplace" field.</summary>
    public const int WorkplaceFieldNumber = 3;
    private readonly static ulong WorkplaceDefaultValue = 0UL;

    private ulong workplace_;
    /// <summary>
    /// This indexes into venues_per_activity[Activity::WORK]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Workplace {
      get { if ((_hasBits0 & 4) != 0) { return workplace_; } else { return WorkplaceDefaultValue; } }
      set {
        _hasBits0 |= 4;
        workplace_ = value;
      }
    }
    /// <summary>Gets whether the "workplace" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWorkplace {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "workplace" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWorkplace() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "identifiers" field.</summary>
    public const int IdentifiersFieldNumber = 4;
    private global::Synthpop.Identifiers identifiers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Identifiers Identifiers {
      get { return identifiers_; }
      set {
        identifiers_ = value;
      }
    }

    /// <summary>Field number for the "demographics" field.</summary>
    public const int DemographicsFieldNumber = 5;
    private global::Synthpop.Demographics demographics_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Demographics Demographics {
      get { return demographics_; }
      set {
        demographics_ = value;
      }
    }

    /// <summary>Field number for the "employment" field.</summary>
    public const int EmploymentFieldNumber = 6;
    private global::Synthpop.Employment employment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Employment Employment {
      get { return employment_; }
      set {
        employment_ = value;
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 7;
    private global::Synthpop.Health health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Health Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 8;
    private global::Synthpop.Events events_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Events Events {
      get { return events_; }
      set {
        events_ = value;
      }
    }

    /// <summary>Field number for the "weekday_diaries" field.</summary>
    public const int WeekdayDiariesFieldNumber = 9;
    private static readonly pb::FieldCodec<uint> _repeated_weekdayDiaries_codec
        = pb::FieldCodec.ForUInt32(72);
    private readonly pbc::RepeatedField<uint> weekdayDiaries_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// A person's time use isn't the same every day.
    /// These're keys in the Population-wide time_use_diaries mapping
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> WeekdayDiaries {
      get { return weekdayDiaries_; }
    }

    /// <summary>Field number for the "weekend_diaries" field.</summary>
    public const int WeekendDiariesFieldNumber = 10;
    private static readonly pb::FieldCodec<uint> _repeated_weekendDiaries_codec
        = pb::FieldCodec.ForUInt32(80);
    private readonly pbc::RepeatedField<uint> weekendDiaries_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> WeekendDiaries {
      get { return weekendDiaries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Person);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Person other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Household != other.Household) return false;
      if (Workplace != other.Workplace) return false;
      if (!object.Equals(Identifiers, other.Identifiers)) return false;
      if (!object.Equals(Demographics, other.Demographics)) return false;
      if (!object.Equals(Employment, other.Employment)) return false;
      if (!object.Equals(Health, other.Health)) return false;
      if (!object.Equals(Events, other.Events)) return false;
      if(!weekdayDiaries_.Equals(other.weekdayDiaries_)) return false;
      if(!weekendDiaries_.Equals(other.weekendDiaries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasHousehold) hash ^= Household.GetHashCode();
      if (HasWorkplace) hash ^= Workplace.GetHashCode();
      if (identifiers_ != null) hash ^= Identifiers.GetHashCode();
      if (demographics_ != null) hash ^= Demographics.GetHashCode();
      if (employment_ != null) hash ^= Employment.GetHashCode();
      if (health_ != null) hash ^= Health.GetHashCode();
      if (events_ != null) hash ^= Events.GetHashCode();
      hash ^= weekdayDiaries_.GetHashCode();
      hash ^= weekendDiaries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (HasHousehold) {
        output.WriteRawTag(16);
        output.WriteUInt64(Household);
      }
      if (HasWorkplace) {
        output.WriteRawTag(24);
        output.WriteUInt64(Workplace);
      }
      if (identifiers_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Identifiers);
      }
      if (demographics_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Demographics);
      }
      if (employment_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Employment);
      }
      if (health_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Health);
      }
      if (events_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Events);
      }
      weekdayDiaries_.WriteTo(output, _repeated_weekdayDiaries_codec);
      weekendDiaries_.WriteTo(output, _repeated_weekendDiaries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (HasHousehold) {
        output.WriteRawTag(16);
        output.WriteUInt64(Household);
      }
      if (HasWorkplace) {
        output.WriteRawTag(24);
        output.WriteUInt64(Workplace);
      }
      if (identifiers_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Identifiers);
      }
      if (demographics_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Demographics);
      }
      if (employment_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Employment);
      }
      if (health_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Health);
      }
      if (events_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Events);
      }
      weekdayDiaries_.WriteTo(ref output, _repeated_weekdayDiaries_codec);
      weekendDiaries_.WriteTo(ref output, _repeated_weekendDiaries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (HasHousehold) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Household);
      }
      if (HasWorkplace) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Workplace);
      }
      if (identifiers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Identifiers);
      }
      if (demographics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Demographics);
      }
      if (employment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Employment);
      }
      if (health_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Health);
      }
      if (events_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Events);
      }
      size += weekdayDiaries_.CalculateSize(_repeated_weekdayDiaries_codec);
      size += weekendDiaries_.CalculateSize(_repeated_weekendDiaries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Person other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasHousehold) {
        Household = other.Household;
      }
      if (other.HasWorkplace) {
        Workplace = other.Workplace;
      }
      if (other.identifiers_ != null) {
        if (identifiers_ == null) {
          Identifiers = new global::Synthpop.Identifiers();
        }
        Identifiers.MergeFrom(other.Identifiers);
      }
      if (other.demographics_ != null) {
        if (demographics_ == null) {
          Demographics = new global::Synthpop.Demographics();
        }
        Demographics.MergeFrom(other.Demographics);
      }
      if (other.employment_ != null) {
        if (employment_ == null) {
          Employment = new global::Synthpop.Employment();
        }
        Employment.MergeFrom(other.Employment);
      }
      if (other.health_ != null) {
        if (health_ == null) {
          Health = new global::Synthpop.Health();
        }
        Health.MergeFrom(other.Health);
      }
      if (other.events_ != null) {
        if (events_ == null) {
          Events = new global::Synthpop.Events();
        }
        Events.MergeFrom(other.Events);
      }
      weekdayDiaries_.Add(other.weekdayDiaries_);
      weekendDiaries_.Add(other.weekendDiaries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            Household = input.ReadUInt64();
            break;
          }
          case 24: {
            Workplace = input.ReadUInt64();
            break;
          }
          case 34: {
            if (identifiers_ == null) {
              Identifiers = new global::Synthpop.Identifiers();
            }
            input.ReadMessage(Identifiers);
            break;
          }
          case 42: {
            if (demographics_ == null) {
              Demographics = new global::Synthpop.Demographics();
            }
            input.ReadMessage(Demographics);
            break;
          }
          case 50: {
            if (employment_ == null) {
              Employment = new global::Synthpop.Employment();
            }
            input.ReadMessage(Employment);
            break;
          }
          case 58: {
            if (health_ == null) {
              Health = new global::Synthpop.Health();
            }
            input.ReadMessage(Health);
            break;
          }
          case 66: {
            if (events_ == null) {
              Events = new global::Synthpop.Events();
            }
            input.ReadMessage(Events);
            break;
          }
          case 74:
          case 72: {
            weekdayDiaries_.AddEntriesFrom(input, _repeated_weekdayDiaries_codec);
            break;
          }
          case 82:
          case 80: {
            weekendDiaries_.AddEntriesFrom(input, _repeated_weekendDiaries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            Household = input.ReadUInt64();
            break;
          }
          case 24: {
            Workplace = input.ReadUInt64();
            break;
          }
          case 34: {
            if (identifiers_ == null) {
              Identifiers = new global::Synthpop.Identifiers();
            }
            input.ReadMessage(Identifiers);
            break;
          }
          case 42: {
            if (demographics_ == null) {
              Demographics = new global::Synthpop.Demographics();
            }
            input.ReadMessage(Demographics);
            break;
          }
          case 50: {
            if (employment_ == null) {
              Employment = new global::Synthpop.Employment();
            }
            input.ReadMessage(Employment);
            break;
          }
          case 58: {
            if (health_ == null) {
              Health = new global::Synthpop.Health();
            }
            input.ReadMessage(Health);
            break;
          }
          case 66: {
            if (events_ == null) {
              Events = new global::Synthpop.Events();
            }
            input.ReadMessage(Events);
            break;
          }
          case 74:
          case 72: {
            weekdayDiaries_.AddEntriesFrom(ref input, _repeated_weekdayDiaries_codec);
            break;
          }
          case 82:
          case 80: {
            weekendDiaries_.AddEntriesFrom(ref input, _repeated_weekendDiaries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Identifiers : pb::IMessage<Identifiers>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Identifiers> _parser = new pb::MessageParser<Identifiers>(() => new Identifiers());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Identifiers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Identifiers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Identifiers(Identifiers other) : this() {
      _hasBits0 = other._hasBits0;
      origPid_ = other.origPid_;
      idTusHh_ = other.idTusHh_;
      idTusP_ = other.idTusP_;
      pidHs_ = other.pidHs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Identifiers Clone() {
      return new Identifiers(this);
    }

    /// <summary>Field number for the "orig_pid" field.</summary>
    public const int OrigPidFieldNumber = 1;
    private readonly static string OrigPidDefaultValue = "";

    private string origPid_;
    /// <summary>
    //// Unique person ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrigPid {
      get { return origPid_ ?? OrigPidDefaultValue; }
      set {
        origPid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "orig_pid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrigPid {
      get { return origPid_ != null; }
    }
    /// <summary>Clears the value of the "orig_pid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrigPid() {
      origPid_ = null;
    }

    /// <summary>Field number for the "id_tus_hh" field.</summary>
    public const int IdTusHhFieldNumber = 2;
    private readonly static long IdTusHhDefaultValue = 0L;

    private long idTusHh_;
    /// <summary>
    /// household identifier linking to the UK Time Use Survey 2015
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long IdTusHh {
      get { if ((_hasBits0 & 1) != 0) { return idTusHh_; } else { return IdTusHhDefaultValue; } }
      set {
        _hasBits0 |= 1;
        idTusHh_ = value;
      }
    }
    /// <summary>Gets whether the "id_tus_hh" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIdTusHh {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id_tus_hh" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdTusHh() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "id_tus_p" field.</summary>
    public const int IdTusPFieldNumber = 3;
    private readonly static long IdTusPDefaultValue = 0L;

    private long idTusP_;
    /// <summary>
    /// person identifier linking to the UK Time Use Survey 2015
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long IdTusP {
      get { if ((_hasBits0 & 2) != 0) { return idTusP_; } else { return IdTusPDefaultValue; } }
      set {
        _hasBits0 |= 2;
        idTusP_ = value;
      }
    }
    /// <summary>Gets whether the "id_tus_p" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIdTusP {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "id_tus_p" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdTusP() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pid_hs" field.</summary>
    public const int PidHsFieldNumber = 4;
    private readonly static long PidHsDefaultValue = 0L;

    private long pidHs_;
    /// <summary>
    /// identifier linking to the Health Surveys of Great Britain (one per country)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PidHs {
      get { if ((_hasBits0 & 4) != 0) { return pidHs_; } else { return PidHsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        pidHs_ = value;
      }
    }
    /// <summary>Gets whether the "pid_hs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPidHs {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pid_hs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPidHs() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Identifiers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Identifiers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrigPid != other.OrigPid) return false;
      if (IdTusHh != other.IdTusHh) return false;
      if (IdTusP != other.IdTusP) return false;
      if (PidHs != other.PidHs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOrigPid) hash ^= OrigPid.GetHashCode();
      if (HasIdTusHh) hash ^= IdTusHh.GetHashCode();
      if (HasIdTusP) hash ^= IdTusP.GetHashCode();
      if (HasPidHs) hash ^= PidHs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOrigPid) {
        output.WriteRawTag(10);
        output.WriteString(OrigPid);
      }
      if (HasIdTusHh) {
        output.WriteRawTag(16);
        output.WriteInt64(IdTusHh);
      }
      if (HasIdTusP) {
        output.WriteRawTag(24);
        output.WriteInt64(IdTusP);
      }
      if (HasPidHs) {
        output.WriteRawTag(32);
        output.WriteInt64(PidHs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOrigPid) {
        output.WriteRawTag(10);
        output.WriteString(OrigPid);
      }
      if (HasIdTusHh) {
        output.WriteRawTag(16);
        output.WriteInt64(IdTusHh);
      }
      if (HasIdTusP) {
        output.WriteRawTag(24);
        output.WriteInt64(IdTusP);
      }
      if (HasPidHs) {
        output.WriteRawTag(32);
        output.WriteInt64(PidHs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasOrigPid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrigPid);
      }
      if (HasIdTusHh) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IdTusHh);
      }
      if (HasIdTusP) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IdTusP);
      }
      if (HasPidHs) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PidHs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Identifiers other) {
      if (other == null) {
        return;
      }
      if (other.HasOrigPid) {
        OrigPid = other.OrigPid;
      }
      if (other.HasIdTusHh) {
        IdTusHh = other.IdTusHh;
      }
      if (other.HasIdTusP) {
        IdTusP = other.IdTusP;
      }
      if (other.HasPidHs) {
        PidHs = other.PidHs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OrigPid = input.ReadString();
            break;
          }
          case 16: {
            IdTusHh = input.ReadInt64();
            break;
          }
          case 24: {
            IdTusP = input.ReadInt64();
            break;
          }
          case 32: {
            PidHs = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OrigPid = input.ReadString();
            break;
          }
          case 16: {
            IdTusHh = input.ReadInt64();
            break;
          }
          case 24: {
            IdTusP = input.ReadInt64();
            break;
          }
          case 32: {
            PidHs = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Demographics : pb::IMessage<Demographics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Demographics> _parser = new pb::MessageParser<Demographics>(() => new Demographics());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Demographics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Demographics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Demographics(Demographics other) : this() {
      _hasBits0 = other._hasBits0;
      sex_ = other.sex_;
      ageYears_ = other.ageYears_;
      ethnicity_ = other.ethnicity_;
      nssec8_ = other.nssec8_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Demographics Clone() {
      return new Demographics(this);
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 1;
    private readonly static global::Synthpop.Sex SexDefaultValue = global::Synthpop.Sex.Male;

    private global::Synthpop.Sex sex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Sex Sex {
      get { if ((_hasBits0 & 1) != 0) { return sex_; } else { return SexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sex_ = value;
      }
    }
    /// <summary>Gets whether the "sex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "age_years" field.</summary>
    public const int AgeYearsFieldNumber = 2;
    private readonly static uint AgeYearsDefaultValue = 0;

    private uint ageYears_;
    /// <summary>
    /// Clamped at 86 as a maximum, due to limits with source data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AgeYears {
      get { if ((_hasBits0 & 2) != 0) { return ageYears_; } else { return AgeYearsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ageYears_ = value;
      }
    }
    /// <summary>Gets whether the "age_years" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgeYears {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "age_years" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgeYears() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ethnicity" field.</summary>
    public const int EthnicityFieldNumber = 3;
    private readonly static global::Synthpop.Ethnicity EthnicityDefaultValue = global::Synthpop.Ethnicity.White;

    private global::Synthpop.Ethnicity ethnicity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Ethnicity Ethnicity {
      get { if ((_hasBits0 & 4) != 0) { return ethnicity_; } else { return EthnicityDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ethnicity_ = value;
      }
    }
    /// <summary>Gets whether the "ethnicity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEthnicity {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ethnicity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEthnicity() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "nssec8" field.</summary>
    public const int Nssec8FieldNumber = 4;
    private readonly static global::Synthpop.Nssec8 Nssec8DefaultValue = global::Synthpop.Nssec8.Higher;

    private global::Synthpop.Nssec8 nssec8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Nssec8 Nssec8 {
      get { if ((_hasBits0 & 8) != 0) { return nssec8_; } else { return Nssec8DefaultValue; } }
      set {
        _hasBits0 |= 8;
        nssec8_ = value;
      }
    }
    /// <summary>Gets whether the "nssec8" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNssec8 {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "nssec8" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNssec8() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Demographics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Demographics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sex != other.Sex) return false;
      if (AgeYears != other.AgeYears) return false;
      if (Ethnicity != other.Ethnicity) return false;
      if (Nssec8 != other.Nssec8) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSex) hash ^= Sex.GetHashCode();
      if (HasAgeYears) hash ^= AgeYears.GetHashCode();
      if (HasEthnicity) hash ^= Ethnicity.GetHashCode();
      if (HasNssec8) hash ^= Nssec8.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSex) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Sex);
      }
      if (HasAgeYears) {
        output.WriteRawTag(16);
        output.WriteUInt32(AgeYears);
      }
      if (HasEthnicity) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Ethnicity);
      }
      if (HasNssec8) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Nssec8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSex) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Sex);
      }
      if (HasAgeYears) {
        output.WriteRawTag(16);
        output.WriteUInt32(AgeYears);
      }
      if (HasEthnicity) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Ethnicity);
      }
      if (HasNssec8) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Nssec8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSex) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Sex);
      }
      if (HasAgeYears) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AgeYears);
      }
      if (HasEthnicity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Ethnicity);
      }
      if (HasNssec8) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nssec8);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Demographics other) {
      if (other == null) {
        return;
      }
      if (other.HasSex) {
        Sex = other.Sex;
      }
      if (other.HasAgeYears) {
        AgeYears = other.AgeYears;
      }
      if (other.HasEthnicity) {
        Ethnicity = other.Ethnicity;
      }
      if (other.HasNssec8) {
        Nssec8 = other.Nssec8;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sex = (global::Synthpop.Sex) input.ReadEnum();
            break;
          }
          case 16: {
            AgeYears = input.ReadUInt32();
            break;
          }
          case 24: {
            Ethnicity = (global::Synthpop.Ethnicity) input.ReadEnum();
            break;
          }
          case 32: {
            Nssec8 = (global::Synthpop.Nssec8) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Sex = (global::Synthpop.Sex) input.ReadEnum();
            break;
          }
          case 16: {
            AgeYears = input.ReadUInt32();
            break;
          }
          case 24: {
            Ethnicity = (global::Synthpop.Ethnicity) input.ReadEnum();
            break;
          }
          case 32: {
            Nssec8 = (global::Synthpop.Nssec8) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Employment : pb::IMessage<Employment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Employment> _parser = new pb::MessageParser<Employment>(() => new Employment());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Employment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Employment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Employment(Employment other) : this() {
      _hasBits0 = other._hasBits0;
      sic1D2007_ = other.sic1D2007_;
      sic2D2007_ = other.sic2D2007_;
      soc2010_ = other.soc2010_;
      pwkstat_ = other.pwkstat_;
      salaryYearly_ = other.salaryYearly_;
      salaryHourly_ = other.salaryHourly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Employment Clone() {
      return new Employment(this);
    }

    /// <summary>Field number for the "sic1d2007" field.</summary>
    public const int Sic1D2007FieldNumber = 1;
    private readonly static string Sic1D2007DefaultValue = "";

    private string sic1D2007_;
    /// <summary>
    /// The Standard Industrial Classification of Economic Activities 2007, 1st
    /// layer where this person works. This is a single capitalized character,
    /// like "A" or "B". See
    /// https://www.ons.gov.uk/methodology/classificationsandstandards/ukstandardindustrialclassificationofeconomicactivities.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Sic1D2007 {
      get { return sic1D2007_ ?? Sic1D2007DefaultValue; }
      set {
        sic1D2007_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sic1d2007" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSic1D2007 {
      get { return sic1D2007_ != null; }
    }
    /// <summary>Clears the value of the "sic1d2007" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSic1D2007() {
      sic1D2007_ = null;
    }

    /// <summary>Field number for the "sic2d2007" field.</summary>
    public const int Sic2D2007FieldNumber = 2;
    private readonly static ulong Sic2D2007DefaultValue = 0UL;

    private ulong sic2D2007_;
    /// <summary>
    /// Standard Industrial Classification of Economic Activities 2007, 2nd
    /// layer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Sic2D2007 {
      get { if ((_hasBits0 & 1) != 0) { return sic2D2007_; } else { return Sic2D2007DefaultValue; } }
      set {
        _hasBits0 |= 1;
        sic2D2007_ = value;
      }
    }
    /// <summary>Gets whether the "sic2d2007" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSic2D2007 {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sic2d2007" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSic2D2007() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "soc2010" field.</summary>
    public const int Soc2010FieldNumber = 3;
    private readonly static ulong Soc2010DefaultValue = 0UL;

    private ulong soc2010_;
    /// <summary>
    /// Previous version of the Standard Occupational Classification
    /// (https://www.ons.gov.uk/methodology/classificationsandstandards/standardoccupationalclassificationsoc/soc2010).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Soc2010 {
      get { if ((_hasBits0 & 2) != 0) { return soc2010_; } else { return Soc2010DefaultValue; } }
      set {
        _hasBits0 |= 2;
        soc2010_ = value;
      }
    }
    /// <summary>Gets whether the "soc2010" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoc2010 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "soc2010" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoc2010() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pwkstat" field.</summary>
    public const int PwkstatFieldNumber = 4;
    private readonly static global::Synthpop.PwkStat PwkstatDefaultValue = global::Synthpop.PwkStat.Na;

    private global::Synthpop.PwkStat pwkstat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.PwkStat Pwkstat {
      get { if ((_hasBits0 & 4) != 0) { return pwkstat_; } else { return PwkstatDefaultValue; } }
      set {
        _hasBits0 |= 4;
        pwkstat_ = value;
      }
    }
    /// <summary>Gets whether the "pwkstat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPwkstat {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pwkstat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPwkstat() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "salary_yearly" field.</summary>
    public const int SalaryYearlyFieldNumber = 5;
    private readonly static float SalaryYearlyDefaultValue = 0F;

    private float salaryYearly_;
    /// <summary>
    /// Yearly salary in GBP. Note this may be 0 when salary_hourly is nonzero, when TimeUse is 0 for work.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SalaryYearly {
      get { if ((_hasBits0 & 8) != 0) { return salaryYearly_; } else { return SalaryYearlyDefaultValue; } }
      set {
        _hasBits0 |= 8;
        salaryYearly_ = value;
      }
    }
    /// <summary>Gets whether the "salary_yearly" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSalaryYearly {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "salary_yearly" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSalaryYearly() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "salary_hourly" field.</summary>
    public const int SalaryHourlyFieldNumber = 6;
    private readonly static float SalaryHourlyDefaultValue = 0F;

    private float salaryHourly_;
    /// <summary>
    /// Hourly salary in GBP.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SalaryHourly {
      get { if ((_hasBits0 & 16) != 0) { return salaryHourly_; } else { return SalaryHourlyDefaultValue; } }
      set {
        _hasBits0 |= 16;
        salaryHourly_ = value;
      }
    }
    /// <summary>Gets whether the "salary_hourly" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSalaryHourly {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "salary_hourly" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSalaryHourly() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Employment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Employment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sic1D2007 != other.Sic1D2007) return false;
      if (Sic2D2007 != other.Sic2D2007) return false;
      if (Soc2010 != other.Soc2010) return false;
      if (Pwkstat != other.Pwkstat) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SalaryYearly, other.SalaryYearly)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SalaryHourly, other.SalaryHourly)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSic1D2007) hash ^= Sic1D2007.GetHashCode();
      if (HasSic2D2007) hash ^= Sic2D2007.GetHashCode();
      if (HasSoc2010) hash ^= Soc2010.GetHashCode();
      if (HasPwkstat) hash ^= Pwkstat.GetHashCode();
      if (HasSalaryYearly) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SalaryYearly);
      if (HasSalaryHourly) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SalaryHourly);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSic1D2007) {
        output.WriteRawTag(10);
        output.WriteString(Sic1D2007);
      }
      if (HasSic2D2007) {
        output.WriteRawTag(16);
        output.WriteUInt64(Sic2D2007);
      }
      if (HasSoc2010) {
        output.WriteRawTag(24);
        output.WriteUInt64(Soc2010);
      }
      if (HasPwkstat) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Pwkstat);
      }
      if (HasSalaryYearly) {
        output.WriteRawTag(45);
        output.WriteFloat(SalaryYearly);
      }
      if (HasSalaryHourly) {
        output.WriteRawTag(53);
        output.WriteFloat(SalaryHourly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSic1D2007) {
        output.WriteRawTag(10);
        output.WriteString(Sic1D2007);
      }
      if (HasSic2D2007) {
        output.WriteRawTag(16);
        output.WriteUInt64(Sic2D2007);
      }
      if (HasSoc2010) {
        output.WriteRawTag(24);
        output.WriteUInt64(Soc2010);
      }
      if (HasPwkstat) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Pwkstat);
      }
      if (HasSalaryYearly) {
        output.WriteRawTag(45);
        output.WriteFloat(SalaryYearly);
      }
      if (HasSalaryHourly) {
        output.WriteRawTag(53);
        output.WriteFloat(SalaryHourly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSic1D2007) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sic1D2007);
      }
      if (HasSic2D2007) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sic2D2007);
      }
      if (HasSoc2010) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Soc2010);
      }
      if (HasPwkstat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Pwkstat);
      }
      if (HasSalaryYearly) {
        size += 1 + 4;
      }
      if (HasSalaryHourly) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Employment other) {
      if (other == null) {
        return;
      }
      if (other.HasSic1D2007) {
        Sic1D2007 = other.Sic1D2007;
      }
      if (other.HasSic2D2007) {
        Sic2D2007 = other.Sic2D2007;
      }
      if (other.HasSoc2010) {
        Soc2010 = other.Soc2010;
      }
      if (other.HasPwkstat) {
        Pwkstat = other.Pwkstat;
      }
      if (other.HasSalaryYearly) {
        SalaryYearly = other.SalaryYearly;
      }
      if (other.HasSalaryHourly) {
        SalaryHourly = other.SalaryHourly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Sic1D2007 = input.ReadString();
            break;
          }
          case 16: {
            Sic2D2007 = input.ReadUInt64();
            break;
          }
          case 24: {
            Soc2010 = input.ReadUInt64();
            break;
          }
          case 32: {
            Pwkstat = (global::Synthpop.PwkStat) input.ReadEnum();
            break;
          }
          case 45: {
            SalaryYearly = input.ReadFloat();
            break;
          }
          case 53: {
            SalaryHourly = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Sic1D2007 = input.ReadString();
            break;
          }
          case 16: {
            Sic2D2007 = input.ReadUInt64();
            break;
          }
          case 24: {
            Soc2010 = input.ReadUInt64();
            break;
          }
          case 32: {
            Pwkstat = (global::Synthpop.PwkStat) input.ReadEnum();
            break;
          }
          case 45: {
            SalaryYearly = input.ReadFloat();
            break;
          }
          case 53: {
            SalaryHourly = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Health : pb::IMessage<Health>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Health> _parser = new pb::MessageParser<Health>(() => new Health());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Health> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Health() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Health(Health other) : this() {
      _hasBits0 = other._hasBits0;
      bmi_ = other.bmi_;
      hasCardiovascularDisease_ = other.hasCardiovascularDisease_;
      hasDiabetes_ = other.hasDiabetes_;
      hasHighBloodPressure_ = other.hasHighBloodPressure_;
      numberMedications_ = other.numberMedications_;
      selfAssessedHealth_ = other.selfAssessedHealth_;
      lifeSatisfaction_ = other.lifeSatisfaction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Health Clone() {
      return new Health(this);
    }

    /// <summary>Field number for the "bmi" field.</summary>
    public const int BmiFieldNumber = 1;
    private readonly static float BmiDefaultValue = 0F;

    private float bmi_;
    /// <summary>
    /// Derived from the Health Survey for England 2019
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Bmi {
      get { if ((_hasBits0 & 1) != 0) { return bmi_; } else { return BmiDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bmi_ = value;
      }
    }
    /// <summary>Gets whether the "bmi" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBmi {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bmi" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBmi() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "has_cardiovascular_disease" field.</summary>
    public const int HasCardiovascularDiseaseFieldNumber = 2;
    private readonly static bool HasCardiovascularDiseaseDefaultValue = false;

    private bool hasCardiovascularDisease_;
    /// <summary>
    /// For England, cardiovascular medication taken in the last 7 days; for Scotland, had cardiovascular condition excluding diabetes / blood pressure; for Wales, any heart condition excluding high boold pressure
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCardiovascularDisease {
      get { if ((_hasBits0 & 2) != 0) { return hasCardiovascularDisease_; } else { return HasCardiovascularDiseaseDefaultValue; } }
      set {
        _hasBits0 |= 2;
        hasCardiovascularDisease_ = value;
      }
    }
    /// <summary>Gets whether the "has_cardiovascular_disease" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHasCardiovascularDisease {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "has_cardiovascular_disease" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHasCardiovascularDisease() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "has_diabetes" field.</summary>
    public const int HasDiabetesFieldNumber = 3;
    private readonly static bool HasDiabetesDefaultValue = false;

    private bool hasDiabetes_;
    /// <summary>
    /// For Scotland and England, has doctor diagnosed diabetes; for Wales, diabetes currently treated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDiabetes {
      get { if ((_hasBits0 & 4) != 0) { return hasDiabetes_; } else { return HasDiabetesDefaultValue; } }
      set {
        _hasBits0 |= 4;
        hasDiabetes_ = value;
      }
    }
    /// <summary>Gets whether the "has_diabetes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHasDiabetes {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "has_diabetes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHasDiabetes() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "has_high_blood_pressure" field.</summary>
    public const int HasHighBloodPressureFieldNumber = 4;
    private readonly static bool HasHighBloodPressureDefaultValue = false;

    private bool hasHighBloodPressure_;
    /// <summary>
    /// For Scotland and England, Doctor diagnosed high blood pressure; for Wales, high blood pressure currently treated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHighBloodPressure {
      get { if ((_hasBits0 & 8) != 0) { return hasHighBloodPressure_; } else { return HasHighBloodPressureDefaultValue; } }
      set {
        _hasBits0 |= 8;
        hasHighBloodPressure_ = value;
      }
    }
    /// <summary>Gets whether the "has_high_blood_pressure" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHasHighBloodPressure {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "has_high_blood_pressure" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHasHighBloodPressure() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "number_medications" field.</summary>
    public const int NumberMedicationsFieldNumber = 5;
    private readonly static ulong NumberMedicationsDefaultValue = 0UL;

    private ulong numberMedications_;
    /// <summary>
    /// Number of prescribed medications; capped at 8 for England, at 18 for Scotland, at 1 for Wales
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong NumberMedications {
      get { if ((_hasBits0 & 16) != 0) { return numberMedications_; } else { return NumberMedicationsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        numberMedications_ = value;
      }
    }
    /// <summary>Gets whether the "number_medications" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumberMedications {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "number_medications" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumberMedications() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "self_assessed_health" field.</summary>
    public const int SelfAssessedHealthFieldNumber = 6;
    private readonly static global::Synthpop.SelfAssessedHealth SelfAssessedHealthDefaultValue = global::Synthpop.SelfAssessedHealth.VeryGood;

    private global::Synthpop.SelfAssessedHealth selfAssessedHealth_;
    /// <summary>
    /// Self assessed general health
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.SelfAssessedHealth SelfAssessedHealth {
      get { if ((_hasBits0 & 32) != 0) { return selfAssessedHealth_; } else { return SelfAssessedHealthDefaultValue; } }
      set {
        _hasBits0 |= 32;
        selfAssessedHealth_ = value;
      }
    }
    /// <summary>Gets whether the "self_assessed_health" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSelfAssessedHealth {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "self_assessed_health" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSelfAssessedHealth() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "life_satisfaction" field.</summary>
    public const int LifeSatisfactionFieldNumber = 7;
    private readonly static global::Synthpop.LifeSatisfaction LifeSatisfactionDefaultValue = global::Synthpop.LifeSatisfaction.Low;

    private global::Synthpop.LifeSatisfaction lifeSatisfaction_;
    /// <summary>
    /// How satisfied with life nowadays
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.LifeSatisfaction LifeSatisfaction {
      get { if ((_hasBits0 & 64) != 0) { return lifeSatisfaction_; } else { return LifeSatisfactionDefaultValue; } }
      set {
        _hasBits0 |= 64;
        lifeSatisfaction_ = value;
      }
    }
    /// <summary>Gets whether the "life_satisfaction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLifeSatisfaction {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "life_satisfaction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLifeSatisfaction() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Health);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Health other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Bmi, other.Bmi)) return false;
      if (HasCardiovascularDisease != other.HasCardiovascularDisease) return false;
      if (HasDiabetes != other.HasDiabetes) return false;
      if (HasHighBloodPressure != other.HasHighBloodPressure) return false;
      if (NumberMedications != other.NumberMedications) return false;
      if (SelfAssessedHealth != other.SelfAssessedHealth) return false;
      if (LifeSatisfaction != other.LifeSatisfaction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBmi) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Bmi);
      if (HasHasCardiovascularDisease) hash ^= HasCardiovascularDisease.GetHashCode();
      if (HasHasDiabetes) hash ^= HasDiabetes.GetHashCode();
      if (HasHasHighBloodPressure) hash ^= HasHighBloodPressure.GetHashCode();
      if (HasNumberMedications) hash ^= NumberMedications.GetHashCode();
      if (HasSelfAssessedHealth) hash ^= SelfAssessedHealth.GetHashCode();
      if (HasLifeSatisfaction) hash ^= LifeSatisfaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBmi) {
        output.WriteRawTag(13);
        output.WriteFloat(Bmi);
      }
      if (HasHasCardiovascularDisease) {
        output.WriteRawTag(16);
        output.WriteBool(HasCardiovascularDisease);
      }
      if (HasHasDiabetes) {
        output.WriteRawTag(24);
        output.WriteBool(HasDiabetes);
      }
      if (HasHasHighBloodPressure) {
        output.WriteRawTag(32);
        output.WriteBool(HasHighBloodPressure);
      }
      if (HasNumberMedications) {
        output.WriteRawTag(40);
        output.WriteUInt64(NumberMedications);
      }
      if (HasSelfAssessedHealth) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SelfAssessedHealth);
      }
      if (HasLifeSatisfaction) {
        output.WriteRawTag(56);
        output.WriteEnum((int) LifeSatisfaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBmi) {
        output.WriteRawTag(13);
        output.WriteFloat(Bmi);
      }
      if (HasHasCardiovascularDisease) {
        output.WriteRawTag(16);
        output.WriteBool(HasCardiovascularDisease);
      }
      if (HasHasDiabetes) {
        output.WriteRawTag(24);
        output.WriteBool(HasDiabetes);
      }
      if (HasHasHighBloodPressure) {
        output.WriteRawTag(32);
        output.WriteBool(HasHighBloodPressure);
      }
      if (HasNumberMedications) {
        output.WriteRawTag(40);
        output.WriteUInt64(NumberMedications);
      }
      if (HasSelfAssessedHealth) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SelfAssessedHealth);
      }
      if (HasLifeSatisfaction) {
        output.WriteRawTag(56);
        output.WriteEnum((int) LifeSatisfaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBmi) {
        size += 1 + 4;
      }
      if (HasHasCardiovascularDisease) {
        size += 1 + 1;
      }
      if (HasHasDiabetes) {
        size += 1 + 1;
      }
      if (HasHasHighBloodPressure) {
        size += 1 + 1;
      }
      if (HasNumberMedications) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NumberMedications);
      }
      if (HasSelfAssessedHealth) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SelfAssessedHealth);
      }
      if (HasLifeSatisfaction) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LifeSatisfaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Health other) {
      if (other == null) {
        return;
      }
      if (other.HasBmi) {
        Bmi = other.Bmi;
      }
      if (other.HasHasCardiovascularDisease) {
        HasCardiovascularDisease = other.HasCardiovascularDisease;
      }
      if (other.HasHasDiabetes) {
        HasDiabetes = other.HasDiabetes;
      }
      if (other.HasHasHighBloodPressure) {
        HasHighBloodPressure = other.HasHighBloodPressure;
      }
      if (other.HasNumberMedications) {
        NumberMedications = other.NumberMedications;
      }
      if (other.HasSelfAssessedHealth) {
        SelfAssessedHealth = other.SelfAssessedHealth;
      }
      if (other.HasLifeSatisfaction) {
        LifeSatisfaction = other.LifeSatisfaction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Bmi = input.ReadFloat();
            break;
          }
          case 16: {
            HasCardiovascularDisease = input.ReadBool();
            break;
          }
          case 24: {
            HasDiabetes = input.ReadBool();
            break;
          }
          case 32: {
            HasHighBloodPressure = input.ReadBool();
            break;
          }
          case 40: {
            NumberMedications = input.ReadUInt64();
            break;
          }
          case 48: {
            SelfAssessedHealth = (global::Synthpop.SelfAssessedHealth) input.ReadEnum();
            break;
          }
          case 56: {
            LifeSatisfaction = (global::Synthpop.LifeSatisfaction) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Bmi = input.ReadFloat();
            break;
          }
          case 16: {
            HasCardiovascularDisease = input.ReadBool();
            break;
          }
          case 24: {
            HasDiabetes = input.ReadBool();
            break;
          }
          case 32: {
            HasHighBloodPressure = input.ReadBool();
            break;
          }
          case 40: {
            NumberMedications = input.ReadUInt64();
            break;
          }
          case 48: {
            SelfAssessedHealth = (global::Synthpop.SelfAssessedHealth) input.ReadEnum();
            break;
          }
          case 56: {
            LifeSatisfaction = (global::Synthpop.LifeSatisfaction) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Events : pb::IMessage<Events>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Events> _parser = new pb::MessageParser<Events>(() => new Events());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Events> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Events() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Events(Events other) : this() {
      _hasBits0 = other._hasBits0;
      sport_ = other.sport_;
      rugby_ = other.rugby_;
      concertM_ = other.concertM_;
      concertF_ = other.concertF_;
      concertMs_ = other.concertMs_;
      concertFs_ = other.concertFs_;
      museum_ = other.museum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Events Clone() {
      return new Events(this);
    }

    /// <summary>Field number for the "sport" field.</summary>
    public const int SportFieldNumber = 1;
    private readonly static float SportDefaultValue = 0F;

    private float sport_;
    /// <summary>
    /// Relative propbability weight to attend a sport fixture
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Sport {
      get { if ((_hasBits0 & 1) != 0) { return sport_; } else { return SportDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sport_ = value;
      }
    }
    /// <summary>Gets whether the "sport" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSport {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sport" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSport() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rugby" field.</summary>
    public const int RugbyFieldNumber = 2;
    private readonly static float RugbyDefaultValue = 0F;

    private float rugby_;
    /// <summary>
    /// Relative propbability weight to attend a Rugby fixture
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rugby {
      get { if ((_hasBits0 & 2) != 0) { return rugby_; } else { return RugbyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rugby_ = value;
      }
    }
    /// <summary>Gets whether the "rugby" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRugby {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rugby" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRugby() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "concert_m" field.</summary>
    public const int ConcertMFieldNumber = 3;
    private readonly static float ConcertMDefaultValue = 0F;

    private float concertM_;
    /// <summary>
    /// Relative propbability weight to attend a concert primarily targetting young males
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ConcertM {
      get { if ((_hasBits0 & 4) != 0) { return concertM_; } else { return ConcertMDefaultValue; } }
      set {
        _hasBits0 |= 4;
        concertM_ = value;
      }
    }
    /// <summary>Gets whether the "concert_m" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConcertM {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "concert_m" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConcertM() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "concert_f" field.</summary>
    public const int ConcertFFieldNumber = 4;
    private readonly static float ConcertFDefaultValue = 0F;

    private float concertF_;
    /// <summary>
    /// Relative propbability weight to attend a concert primarily targetting young females
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ConcertF {
      get { if ((_hasBits0 & 8) != 0) { return concertF_; } else { return ConcertFDefaultValue; } }
      set {
        _hasBits0 |= 8;
        concertF_ = value;
      }
    }
    /// <summary>Gets whether the "concert_f" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConcertF {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "concert_f" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConcertF() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "concert_ms" field.</summary>
    public const int ConcertMsFieldNumber = 5;
    private readonly static float ConcertMsDefaultValue = 0F;

    private float concertMs_;
    /// <summary>
    /// Relative propbability weight to attend a concert primarily targetting middle-aged males
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ConcertMs {
      get { if ((_hasBits0 & 16) != 0) { return concertMs_; } else { return ConcertMsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        concertMs_ = value;
      }
    }
    /// <summary>Gets whether the "concert_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConcertMs {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "concert_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConcertMs() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "concert_fs" field.</summary>
    public const int ConcertFsFieldNumber = 6;
    private readonly static float ConcertFsDefaultValue = 0F;

    private float concertFs_;
    /// <summary>
    /// Relative propbability weight to attend a concert primarily targetting middle-aged females
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ConcertFs {
      get { if ((_hasBits0 & 32) != 0) { return concertFs_; } else { return ConcertFsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        concertFs_ = value;
      }
    }
    /// <summary>Gets whether the "concert_fs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConcertFs {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "concert_fs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConcertFs() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "museum" field.</summary>
    public const int MuseumFieldNumber = 7;
    private readonly static float MuseumDefaultValue = 0F;

    private float museum_;
    /// <summary>
    /// Relative propbability weight to visit a museum
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Museum {
      get { if ((_hasBits0 & 64) != 0) { return museum_; } else { return MuseumDefaultValue; } }
      set {
        _hasBits0 |= 64;
        museum_ = value;
      }
    }
    /// <summary>Gets whether the "museum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMuseum {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "museum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMuseum() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Events);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Events other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Sport, other.Sport)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rugby, other.Rugby)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ConcertM, other.ConcertM)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ConcertF, other.ConcertF)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ConcertMs, other.ConcertMs)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ConcertFs, other.ConcertFs)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Museum, other.Museum)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSport) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Sport);
      if (HasRugby) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rugby);
      if (HasConcertM) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ConcertM);
      if (HasConcertF) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ConcertF);
      if (HasConcertMs) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ConcertMs);
      if (HasConcertFs) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ConcertFs);
      if (HasMuseum) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Museum);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSport) {
        output.WriteRawTag(13);
        output.WriteFloat(Sport);
      }
      if (HasRugby) {
        output.WriteRawTag(21);
        output.WriteFloat(Rugby);
      }
      if (HasConcertM) {
        output.WriteRawTag(29);
        output.WriteFloat(ConcertM);
      }
      if (HasConcertF) {
        output.WriteRawTag(37);
        output.WriteFloat(ConcertF);
      }
      if (HasConcertMs) {
        output.WriteRawTag(45);
        output.WriteFloat(ConcertMs);
      }
      if (HasConcertFs) {
        output.WriteRawTag(53);
        output.WriteFloat(ConcertFs);
      }
      if (HasMuseum) {
        output.WriteRawTag(61);
        output.WriteFloat(Museum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSport) {
        output.WriteRawTag(13);
        output.WriteFloat(Sport);
      }
      if (HasRugby) {
        output.WriteRawTag(21);
        output.WriteFloat(Rugby);
      }
      if (HasConcertM) {
        output.WriteRawTag(29);
        output.WriteFloat(ConcertM);
      }
      if (HasConcertF) {
        output.WriteRawTag(37);
        output.WriteFloat(ConcertF);
      }
      if (HasConcertMs) {
        output.WriteRawTag(45);
        output.WriteFloat(ConcertMs);
      }
      if (HasConcertFs) {
        output.WriteRawTag(53);
        output.WriteFloat(ConcertFs);
      }
      if (HasMuseum) {
        output.WriteRawTag(61);
        output.WriteFloat(Museum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSport) {
        size += 1 + 4;
      }
      if (HasRugby) {
        size += 1 + 4;
      }
      if (HasConcertM) {
        size += 1 + 4;
      }
      if (HasConcertF) {
        size += 1 + 4;
      }
      if (HasConcertMs) {
        size += 1 + 4;
      }
      if (HasConcertFs) {
        size += 1 + 4;
      }
      if (HasMuseum) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Events other) {
      if (other == null) {
        return;
      }
      if (other.HasSport) {
        Sport = other.Sport;
      }
      if (other.HasRugby) {
        Rugby = other.Rugby;
      }
      if (other.HasConcertM) {
        ConcertM = other.ConcertM;
      }
      if (other.HasConcertF) {
        ConcertF = other.ConcertF;
      }
      if (other.HasConcertMs) {
        ConcertMs = other.ConcertMs;
      }
      if (other.HasConcertFs) {
        ConcertFs = other.ConcertFs;
      }
      if (other.HasMuseum) {
        Museum = other.Museum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Sport = input.ReadFloat();
            break;
          }
          case 21: {
            Rugby = input.ReadFloat();
            break;
          }
          case 29: {
            ConcertM = input.ReadFloat();
            break;
          }
          case 37: {
            ConcertF = input.ReadFloat();
            break;
          }
          case 45: {
            ConcertMs = input.ReadFloat();
            break;
          }
          case 53: {
            ConcertFs = input.ReadFloat();
            break;
          }
          case 61: {
            Museum = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Sport = input.ReadFloat();
            break;
          }
          case 21: {
            Rugby = input.ReadFloat();
            break;
          }
          case 29: {
            ConcertM = input.ReadFloat();
            break;
          }
          case 37: {
            ConcertF = input.ReadFloat();
            break;
          }
          case 45: {
            ConcertMs = input.ReadFloat();
            break;
          }
          case 53: {
            ConcertFs = input.ReadFloat();
            break;
          }
          case 61: {
            Museum = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Per activity, a list of venues where anybody living in a certain MSOA is
  /// likely to go do that activity.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Flows : pb::IMessage<Flows>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Flows> _parser = new pb::MessageParser<Flows>(() => new Flows());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Flows> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Flows() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Flows(Flows other) : this() {
      _hasBits0 = other._hasBits0;
      activity_ = other.activity_;
      flows_ = other.flows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Flows Clone() {
      return new Flows(this);
    }

    /// <summary>Field number for the "activity" field.</summary>
    public const int ActivityFieldNumber = 1;
    private readonly static global::Synthpop.Activity ActivityDefaultValue = global::Synthpop.Activity.Retail;

    private global::Synthpop.Activity activity_;
    /// <summary>
    /// Note that HOME and WORK won't be represented here, since it varies
    /// per-person.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Activity Activity {
      get { if ((_hasBits0 & 1) != 0) { return activity_; } else { return ActivityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        activity_ = value;
      }
    }
    /// <summary>Gets whether the "activity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivity {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "activity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivity() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "flows" field.</summary>
    public const int Flows_FieldNumber = 2;
    private static readonly pb::FieldCodec<global::Synthpop.Flow> _repeated_flows_codec
        = pb::FieldCodec.ForMessage(18, global::Synthpop.Flow.Parser);
    private readonly pbc::RepeatedField<global::Synthpop.Flow> flows_ = new pbc::RepeatedField<global::Synthpop.Flow>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Synthpop.Flow> Flows_ {
      get { return flows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Flows);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Flows other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Activity != other.Activity) return false;
      if(!flows_.Equals(other.flows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasActivity) hash ^= Activity.GetHashCode();
      hash ^= flows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasActivity) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Activity);
      }
      flows_.WriteTo(output, _repeated_flows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasActivity) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Activity);
      }
      flows_.WriteTo(ref output, _repeated_flows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasActivity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Activity);
      }
      size += flows_.CalculateSize(_repeated_flows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Flows other) {
      if (other == null) {
        return;
      }
      if (other.HasActivity) {
        Activity = other.Activity;
      }
      flows_.Add(other.flows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Activity = (global::Synthpop.Activity) input.ReadEnum();
            break;
          }
          case 18: {
            flows_.AddEntriesFrom(input, _repeated_flows_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Activity = (global::Synthpop.Activity) input.ReadEnum();
            break;
          }
          case 18: {
            flows_.AddEntriesFrom(ref input, _repeated_flows_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Flow : pb::IMessage<Flow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Flow> _parser = new pb::MessageParser<Flow>(() => new Flow());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Flow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Flow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Flow(Flow other) : this() {
      _hasBits0 = other._hasBits0;
      venueId_ = other.venueId_;
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Flow Clone() {
      return new Flow(this);
    }

    /// <summary>Field number for the "venue_id" field.</summary>
    public const int VenueIdFieldNumber = 1;
    private readonly static ulong VenueIdDefaultValue = 0UL;

    private ulong venueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong VenueId {
      get { if ((_hasBits0 & 1) != 0) { return venueId_; } else { return VenueIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        venueId_ = value;
      }
    }
    /// <summary>Gets whether the "venue_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVenueId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "venue_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVenueId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 2;
    private readonly static double WeightDefaultValue = 0D;

    private double weight_;
    /// <summary>
    /// The probabilities sum to 1 for all `flows`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Weight {
      get { if ((_hasBits0 & 2) != 0) { return weight_; } else { return WeightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        weight_ = value;
      }
    }
    /// <summary>Gets whether the "weight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWeight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "weight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWeight() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Flow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Flow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VenueId != other.VenueId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Weight, other.Weight)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVenueId) hash ^= VenueId.GetHashCode();
      if (HasWeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Weight);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVenueId) {
        output.WriteRawTag(8);
        output.WriteUInt64(VenueId);
      }
      if (HasWeight) {
        output.WriteRawTag(17);
        output.WriteDouble(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVenueId) {
        output.WriteRawTag(8);
        output.WriteUInt64(VenueId);
      }
      if (HasWeight) {
        output.WriteRawTag(17);
        output.WriteDouble(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasVenueId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VenueId);
      }
      if (HasWeight) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Flow other) {
      if (other == null) {
        return;
      }
      if (other.HasVenueId) {
        VenueId = other.VenueId;
      }
      if (other.HasWeight) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VenueId = input.ReadUInt64();
            break;
          }
          case 17: {
            Weight = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VenueId = input.ReadUInt64();
            break;
          }
          case 17: {
            Weight = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a place where people do an activity
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Venue : pb::IMessage<Venue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Venue> _parser = new pb::MessageParser<Venue>(() => new Venue());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Venue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Venue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Venue(Venue other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      activity_ = other.activity_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      urn_ = other.urn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Venue Clone() {
      return new Venue(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static ulong IdDefaultValue = 0UL;

    private ulong id_;
    /// <summary>
    /// IDs are reused across different activities; both this id and an Activity
    /// is needed to lookup from venues_per_activity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "activity" field.</summary>
    public const int ActivityFieldNumber = 2;
    private readonly static global::Synthpop.Activity ActivityDefaultValue = global::Synthpop.Activity.Retail;

    private global::Synthpop.Activity activity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Activity Activity {
      get { if ((_hasBits0 & 2) != 0) { return activity_; } else { return ActivityDefaultValue; } }
      set {
        _hasBits0 |= 2;
        activity_ = value;
      }
    }
    /// <summary>Gets whether the "activity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "activity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivity() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 3;
    private global::Synthpop.Point location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Point Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "urn" field.</summary>
    public const int UrnFieldNumber = 4;
    private readonly static string UrnDefaultValue = "";

    private string urn_;
    /// <summary>
    /// This only exists for PrimarySchool and SecondarySchool. It's a
    /// https://en.wikipedia.org/wiki/Unique_Reference_Number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Urn {
      get { return urn_ ?? UrnDefaultValue; }
      set {
        urn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "urn" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrn {
      get { return urn_ != null; }
    }
    /// <summary>Clears the value of the "urn" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrn() {
      urn_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Venue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Venue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Activity != other.Activity) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (Urn != other.Urn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasActivity) hash ^= Activity.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (HasUrn) hash ^= Urn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (HasActivity) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Activity);
      }
      if (location_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Location);
      }
      if (HasUrn) {
        output.WriteRawTag(34);
        output.WriteString(Urn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (HasActivity) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Activity);
      }
      if (location_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Location);
      }
      if (HasUrn) {
        output.WriteRawTag(34);
        output.WriteString(Urn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (HasActivity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Activity);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (HasUrn) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Urn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Venue other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasActivity) {
        Activity = other.Activity;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Synthpop.Point();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.HasUrn) {
        Urn = other.Urn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            Activity = (global::Synthpop.Activity) input.ReadEnum();
            break;
          }
          case 26: {
            if (location_ == null) {
              Location = new global::Synthpop.Point();
            }
            input.ReadMessage(Location);
            break;
          }
          case 34: {
            Urn = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            Activity = (global::Synthpop.Activity) input.ReadEnum();
            break;
          }
          case 26: {
            if (location_ == null) {
              Location = new global::Synthpop.Point();
            }
            input.ReadMessage(Location);
            break;
          }
          case 34: {
            Urn = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes a reduction in daily travel behavior due to COVID lockdowns.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Lockdown : pb::IMessage<Lockdown>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Lockdown> _parser = new pb::MessageParser<Lockdown>(() => new Lockdown());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Lockdown> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Lockdown() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Lockdown(Lockdown other) : this() {
      startDate_ = other.startDate_;
      changePerDay_ = other.changePerDay_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Lockdown Clone() {
      return new Lockdown(this);
    }

    /// <summary>Field number for the "start_date" field.</summary>
    public const int StartDateFieldNumber = 1;
    private readonly static string StartDateDefaultValue = "";

    private string startDate_;
    /// <summary>
    /// The YYYY-MM-DD date of the first entry in the daily list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StartDate {
      get { return startDate_ ?? StartDateDefaultValue; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "start_date" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartDate {
      get { return startDate_ != null; }
    }
    /// <summary>Clears the value of the "start_date" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartDate() {
      startDate_ = null;
    }

    /// <summary>Field number for the "change_per_day" field.</summary>
    public const int ChangePerDayFieldNumber = 2;
    private static readonly pb::FieldCodec<float> _repeated_changePerDay_codec
        = pb::FieldCodec.ForFloat(21);
    private readonly pbc::RepeatedField<float> changePerDay_ = new pbc::RepeatedField<float>();
    /// <summary>
    /// A list of factors by which regular mobility was reduced, with the first
    /// corresponding to start_date. 1.0 means no change from normal. Greater
    /// than 1 means some percent of regular mobility was reduced.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<float> ChangePerDay {
      get { return changePerDay_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Lockdown);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Lockdown other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartDate != other.StartDate) return false;
      if(!changePerDay_.Equals(other.changePerDay_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStartDate) hash ^= StartDate.GetHashCode();
      hash ^= changePerDay_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStartDate) {
        output.WriteRawTag(10);
        output.WriteString(StartDate);
      }
      changePerDay_.WriteTo(output, _repeated_changePerDay_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStartDate) {
        output.WriteRawTag(10);
        output.WriteString(StartDate);
      }
      changePerDay_.WriteTo(ref output, _repeated_changePerDay_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStartDate) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      size += changePerDay_.CalculateSize(_repeated_changePerDay_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Lockdown other) {
      if (other == null) {
        return;
      }
      if (other.HasStartDate) {
        StartDate = other.StartDate;
      }
      changePerDay_.Add(other.changePerDay_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StartDate = input.ReadString();
            break;
          }
          case 18:
          case 21: {
            changePerDay_.AddEntriesFrom(input, _repeated_changePerDay_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StartDate = input.ReadString();
            break;
          }
          case 18:
          case 21: {
            changePerDay_.AddEntriesFrom(ref input, _repeated_changePerDay_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TimeUseDiary : pb::IMessage<TimeUseDiary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimeUseDiary> _parser = new pb::MessageParser<TimeUseDiary>(() => new TimeUseDiary());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TimeUseDiary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Synthpop.SynthpopReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeUseDiary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeUseDiary(TimeUseDiary other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      weekday_ = other.weekday_;
      dayType_ = other.dayType_;
      month_ = other.month_;
      pworkhome_ = other.pworkhome_;
      phomeother_ = other.phomeother_;
      pwork_ = other.pwork_;
      pschool_ = other.pschool_;
      pshop_ = other.pshop_;
      pservices_ = other.pservices_;
      pleisure_ = other.pleisure_;
      pescort_ = other.pescort_;
      ptransport_ = other.ptransport_;
      phomeTotal_ = other.phomeTotal_;
      pnothomeTotal_ = other.pnothomeTotal_;
      punknownTotal_ = other.punknownTotal_;
      pmwalk_ = other.pmwalk_;
      pmcycle_ = other.pmcycle_;
      pmprivate_ = other.pmprivate_;
      pmpublic_ = other.pmpublic_;
      pmunknown_ = other.pmunknown_;
      sex_ = other.sex_;
      age35G_ = other.age35G_;
      nssec8_ = other.nssec8_;
      pwkstat_ = other.pwkstat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeUseDiary Clone() {
      return new TimeUseDiary(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    /// <summary>
    /// Unique identifier of a diary entry (derived from TUS 15, serial_pnum_weekday)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "weekday" field.</summary>
    public const int WeekdayFieldNumber = 2;
    private readonly static bool WeekdayDefaultValue = false;

    private bool weekday_;
    /// <summary>
    /// Working day or weekend day (derived from uktus15_dv_time_vars)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Weekday {
      get { if ((_hasBits0 & 1) != 0) { return weekday_; } else { return WeekdayDefaultValue; } }
      set {
        _hasBits0 |= 1;
        weekday_ = value;
      }
    }
    /// <summary>Gets whether the "weekday" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWeekday {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "weekday" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWeekday() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "day_type" field.</summary>
    public const int DayTypeFieldNumber = 3;
    private readonly static int DayTypeDefaultValue = 0;

    private int dayType_;
    /// <summary>
    /// TODO Enum
    /// Type of day (KindOfDay in uktus15_dv_time_vars)
    /// 1	A workday
    /// 2	A school or college day
    /// 3	A day off due to the weekend/holiday or work schedule
    /// 4	A sick leave day
    /// 5	A vacation/annual leave day
    /// 6	On leave for other reasons
    /// 7	None of the above
    /// -9	No answer/refused
    /// -7	Interview not achieved
    /// -2	Schedule not applicable
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DayType {
      get { if ((_hasBits0 & 2) != 0) { return dayType_; } else { return DayTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        dayType_ = value;
      }
    }
    /// <summary>Gets whether the "day_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDayType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "day_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDayType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "month" field.</summary>
    public const int MonthFieldNumber = 4;
    private readonly static uint MonthDefaultValue = 0;

    private uint month_;
    /// <summary>
    /// Month of the year, as [1, 12] (dmonth in uktus15_dv_time_vars)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Month {
      get { if ((_hasBits0 & 4) != 0) { return month_; } else { return MonthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        month_ = value;
      }
    }
    /// <summary>Gets whether the "month" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMonth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "month" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMonth() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "pworkhome" field.</summary>
    public const int PworkhomeFieldNumber = 5;
    private readonly static float PworkhomeDefaultValue = 0F;

    private float pworkhome_;
    /// <summary>
    /// Proportion of the day spent working at home (derived from dml1_1 in
    /// uktus15_dv_time_vars and uktus15_diary_ep_long)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pworkhome {
      get { if ((_hasBits0 & 8) != 0) { return pworkhome_; } else { return PworkhomeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        pworkhome_ = value;
      }
    }
    /// <summary>Gets whether the "pworkhome" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPworkhome {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "pworkhome" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPworkhome() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "phomeother" field.</summary>
    public const int PhomeotherFieldNumber = 6;
    private readonly static float PhomeotherDefaultValue = 0F;

    private float phomeother_;
    /// <summary>
    /// Proportion of the day spent doing other activities at home (derived from
    /// the sum of dml1_0, dml1_3, dml1_7 and dml1_8 in uktus15_dv_time_vars)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Phomeother {
      get { if ((_hasBits0 & 16) != 0) { return phomeother_; } else { return PhomeotherDefaultValue; } }
      set {
        _hasBits0 |= 16;
        phomeother_ = value;
      }
    }
    /// <summary>Gets whether the "phomeother" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPhomeother {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "phomeother" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPhomeother() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "pwork" field.</summary>
    public const int PworkFieldNumber = 7;
    private readonly static float PworkDefaultValue = 0F;

    private float pwork_;
    /// <summary>
    /// Proportion of the day spent working away from home (derived from dml1_1
    /// in uktus15_dv_time_vars and uktus15_diary_ep_long)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pwork {
      get { if ((_hasBits0 & 32) != 0) { return pwork_; } else { return PworkDefaultValue; } }
      set {
        _hasBits0 |= 32;
        pwork_ = value;
      }
    }
    /// <summary>Gets whether the "pwork" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPwork {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "pwork" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPwork() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "pschool" field.</summary>
    public const int PschoolFieldNumber = 8;
    private readonly static float PschoolDefaultValue = 0F;

    private float pschool_;
    /// <summary>
    /// Proportion of the day spent at school (derived from dml2_21 in
    /// uktus15_dv_time_vars)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pschool {
      get { if ((_hasBits0 & 64) != 0) { return pschool_; } else { return PschoolDefaultValue; } }
      set {
        _hasBits0 |= 64;
        pschool_ = value;
      }
    }
    /// <summary>Gets whether the "pschool" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPschool {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "pschool" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPschool() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "pshop" field.</summary>
    public const int PshopFieldNumber = 9;
    private readonly static float PshopDefaultValue = 0F;

    private float pshop_;
    /// <summary>
    /// Proportion of the day spent shopping (derived from dml3_361 in
    /// uktus15_dv_time_vars)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pshop {
      get { if ((_hasBits0 & 128) != 0) { return pshop_; } else { return PshopDefaultValue; } }
      set {
        _hasBits0 |= 128;
        pshop_ = value;
      }
    }
    /// <summary>Gets whether the "pshop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPshop {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "pshop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPshop() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "pservices" field.</summary>
    public const int PservicesFieldNumber = 10;
    private readonly static float PservicesDefaultValue = 0F;

    private float pservices_;
    /// <summary>
    /// Proportion of the day spent at commercial or personal services (derived
    /// from the sum of dml3_362 and dml3_363 in uktus15_dv_time_vars)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pservices {
      get { if ((_hasBits0 & 256) != 0) { return pservices_; } else { return PservicesDefaultValue; } }
      set {
        _hasBits0 |= 256;
        pservices_ = value;
      }
    }
    /// <summary>Gets whether the "pservices" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPservices {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "pservices" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPservices() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "pleisure" field.</summary>
    public const int PleisureFieldNumber = 11;
    private readonly static float PleisureDefaultValue = 0F;

    private float pleisure_;
    /// <summary>
    /// Proportion of the day spent doing outdoors leisure activities (derived
    /// from the sum of dml1_4, dml1_5 and dml1_6 in uktus15_dv_time_vars)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pleisure {
      get { if ((_hasBits0 & 512) != 0) { return pleisure_; } else { return PleisureDefaultValue; } }
      set {
        _hasBits0 |= 512;
        pleisure_ = value;
      }
    }
    /// <summary>Gets whether the "pleisure" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPleisure {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "pleisure" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPleisure() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "pescort" field.</summary>
    public const int PescortFieldNumber = 12;
    private readonly static float PescortDefaultValue = 0F;

    private float pescort_;
    /// <summary>
    /// Proportion of the day spent escorting someone else (derived from
    /// dml3_923 in uktus15_dv_time_vars)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pescort {
      get { if ((_hasBits0 & 1024) != 0) { return pescort_; } else { return PescortDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        pescort_ = value;
      }
    }
    /// <summary>Gets whether the "pescort" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPescort {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "pescort" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPescort() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "ptransport" field.</summary>
    public const int PtransportFieldNumber = 13;
    private readonly static float PtransportDefaultValue = 0F;

    private float ptransport_;
    /// <summary>
    /// Proportion of the day spent travelling (derived from dml1_9a in
    /// uktus15_dv_time_vars)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ptransport {
      get { if ((_hasBits0 & 2048) != 0) { return ptransport_; } else { return PtransportDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        ptransport_ = value;
      }
    }
    /// <summary>Gets whether the "ptransport" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPtransport {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "ptransport" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPtransport() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "phome_total" field.</summary>
    public const int PhomeTotalFieldNumber = 14;
    private readonly static float PhomeTotalDefaultValue = 0F;

    private float phomeTotal_;
    /// <summary>
    /// Total proportion of the day spent doing activities at home (formula =
    /// pworkhome + phomeother)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PhomeTotal {
      get { if ((_hasBits0 & 4096) != 0) { return phomeTotal_; } else { return PhomeTotalDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        phomeTotal_ = value;
      }
    }
    /// <summary>Gets whether the "phome_total" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPhomeTotal {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "phome_total" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPhomeTotal() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "pnothome_total" field.</summary>
    public const int PnothomeTotalFieldNumber = 15;
    private readonly static float PnothomeTotalDefaultValue = 0F;

    private float pnothomeTotal_;
    /// <summary>
    /// Total proportion of the day spent oudoors (formula = pwork + pschool +
    /// pshop + pservices + pleisure + pescort + ptransport)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PnothomeTotal {
      get { if ((_hasBits0 & 8192) != 0) { return pnothomeTotal_; } else { return PnothomeTotalDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        pnothomeTotal_ = value;
      }
    }
    /// <summary>Gets whether the "pnothome_total" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPnothomeTotal {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "pnothome_total" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPnothomeTotal() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "punknown_total" field.</summary>
    public const int PunknownTotalFieldNumber = 16;
    private readonly static float PunknownTotalDefaultValue = 0F;

    private float punknownTotal_;
    /// <summary>
    /// Total reamining proportion of the day spent (formula = 1 - (phomeTOT +
    /// pnothomeTOT)); if negative, removed form phomeother
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PunknownTotal {
      get { if ((_hasBits0 & 16384) != 0) { return punknownTotal_; } else { return PunknownTotalDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        punknownTotal_ = value;
      }
    }
    /// <summary>Gets whether the "punknown_total" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPunknownTotal {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "punknown_total" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPunknownTotal() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "pmwalk" field.</summary>
    public const int PmwalkFieldNumber = 17;
    private readonly static float PmwalkDefaultValue = 0F;

    private float pmwalk_;
    /// <summary>
    /// Proportion of travel done walking (derived from uktus15_diary_ep_long)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pmwalk {
      get { if ((_hasBits0 & 32768) != 0) { return pmwalk_; } else { return PmwalkDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        pmwalk_ = value;
      }
    }
    /// <summary>Gets whether the "pmwalk" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPmwalk {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "pmwalk" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPmwalk() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "pmcycle" field.</summary>
    public const int PmcycleFieldNumber = 18;
    private readonly static float PmcycleDefaultValue = 0F;

    private float pmcycle_;
    /// <summary>
    /// Proportion of travel done cycling (derived from uktus15_diary_ep_long)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pmcycle {
      get { if ((_hasBits0 & 65536) != 0) { return pmcycle_; } else { return PmcycleDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        pmcycle_ = value;
      }
    }
    /// <summary>Gets whether the "pmcycle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPmcycle {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "pmcycle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPmcycle() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "pmprivate" field.</summary>
    public const int PmprivateFieldNumber = 19;
    private readonly static float PmprivateDefaultValue = 0F;

    private float pmprivate_;
    /// <summary>
    /// Proportion of travel through a private mean of transportation (includes
    /// walking and cycling) (derived from uktus15_diary_ep_long)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pmprivate {
      get { if ((_hasBits0 & 131072) != 0) { return pmprivate_; } else { return PmprivateDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        pmprivate_ = value;
      }
    }
    /// <summary>Gets whether the "pmprivate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPmprivate {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "pmprivate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPmprivate() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "pmpublic" field.</summary>
    public const int PmpublicFieldNumber = 20;
    private readonly static float PmpublicDefaultValue = 0F;

    private float pmpublic_;
    /// <summary>
    /// Proportion of travel done through a public mean of transportation
    /// (derived from uktus15_diary_ep_long)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pmpublic {
      get { if ((_hasBits0 & 262144) != 0) { return pmpublic_; } else { return PmpublicDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        pmpublic_ = value;
      }
    }
    /// <summary>Gets whether the "pmpublic" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPmpublic {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "pmpublic" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPmpublic() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "pmunknown" field.</summary>
    public const int PmunknownFieldNumber = 21;
    private readonly static float PmunknownDefaultValue = 0F;

    private float pmunknown_;
    /// <summary>
    /// Proportion of travel done through an unknown mean - note that pm unknown
    /// + pmpublic + pmprivate sum to 1 or 0 if no travel is made (derived from
    /// uktus15_diary_ep_long)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pmunknown {
      get { if ((_hasBits0 & 524288) != 0) { return pmunknown_; } else { return PmunknownDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        pmunknown_ = value;
      }
    }
    /// <summary>Gets whether the "pmunknown" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPmunknown {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "pmunknown" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPmunknown() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 22;
    private readonly static global::Synthpop.Sex SexDefaultValue = global::Synthpop.Sex.Male;

    private global::Synthpop.Sex sex_;
    /// <summary>
    /// Characteristics of the person who filled out this diary
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Sex Sex {
      get { if ((_hasBits0 & 1048576) != 0) { return sex_; } else { return SexDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        sex_ = value;
      }
    }
    /// <summary>Gets whether the "sex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSex {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "sex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSex() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "age35g" field.</summary>
    public const int Age35GFieldNumber = 23;
    private readonly static uint Age35GDefaultValue = 0;

    private uint age35G_;
    /// <summary>
    /// An ONS-defined age bucket
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Age35G {
      get { if ((_hasBits0 & 2097152) != 0) { return age35G_; } else { return Age35GDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        age35G_ = value;
      }
    }
    /// <summary>Gets whether the "age35g" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAge35G {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "age35g" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAge35G() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "nssec8" field.</summary>
    public const int Nssec8FieldNumber = 24;
    private readonly static global::Synthpop.Nssec8 Nssec8DefaultValue = global::Synthpop.Nssec8.Higher;

    private global::Synthpop.Nssec8 nssec8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.Nssec8 Nssec8 {
      get { if ((_hasBits0 & 4194304) != 0) { return nssec8_; } else { return Nssec8DefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        nssec8_ = value;
      }
    }
    /// <summary>Gets whether the "nssec8" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNssec8 {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "nssec8" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNssec8() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "pwkstat" field.</summary>
    public const int PwkstatFieldNumber = 25;
    private readonly static global::Synthpop.PwkStat PwkstatDefaultValue = global::Synthpop.PwkStat.Na;

    private global::Synthpop.PwkStat pwkstat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Synthpop.PwkStat Pwkstat {
      get { if ((_hasBits0 & 8388608) != 0) { return pwkstat_; } else { return PwkstatDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        pwkstat_ = value;
      }
    }
    /// <summary>Gets whether the "pwkstat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPwkstat {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "pwkstat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPwkstat() {
      _hasBits0 &= ~8388608;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TimeUseDiary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TimeUseDiary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Weekday != other.Weekday) return false;
      if (DayType != other.DayType) return false;
      if (Month != other.Month) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pworkhome, other.Pworkhome)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Phomeother, other.Phomeother)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pwork, other.Pwork)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pschool, other.Pschool)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pshop, other.Pshop)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pservices, other.Pservices)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pleisure, other.Pleisure)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pescort, other.Pescort)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ptransport, other.Ptransport)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PhomeTotal, other.PhomeTotal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PnothomeTotal, other.PnothomeTotal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PunknownTotal, other.PunknownTotal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pmwalk, other.Pmwalk)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pmcycle, other.Pmcycle)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pmprivate, other.Pmprivate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pmpublic, other.Pmpublic)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pmunknown, other.Pmunknown)) return false;
      if (Sex != other.Sex) return false;
      if (Age35G != other.Age35G) return false;
      if (Nssec8 != other.Nssec8) return false;
      if (Pwkstat != other.Pwkstat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasWeekday) hash ^= Weekday.GetHashCode();
      if (HasDayType) hash ^= DayType.GetHashCode();
      if (HasMonth) hash ^= Month.GetHashCode();
      if (HasPworkhome) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pworkhome);
      if (HasPhomeother) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Phomeother);
      if (HasPwork) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pwork);
      if (HasPschool) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pschool);
      if (HasPshop) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pshop);
      if (HasPservices) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pservices);
      if (HasPleisure) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pleisure);
      if (HasPescort) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pescort);
      if (HasPtransport) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ptransport);
      if (HasPhomeTotal) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PhomeTotal);
      if (HasPnothomeTotal) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PnothomeTotal);
      if (HasPunknownTotal) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PunknownTotal);
      if (HasPmwalk) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pmwalk);
      if (HasPmcycle) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pmcycle);
      if (HasPmprivate) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pmprivate);
      if (HasPmpublic) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pmpublic);
      if (HasPmunknown) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pmunknown);
      if (HasSex) hash ^= Sex.GetHashCode();
      if (HasAge35G) hash ^= Age35G.GetHashCode();
      if (HasNssec8) hash ^= Nssec8.GetHashCode();
      if (HasPwkstat) hash ^= Pwkstat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (HasWeekday) {
        output.WriteRawTag(16);
        output.WriteBool(Weekday);
      }
      if (HasDayType) {
        output.WriteRawTag(24);
        output.WriteInt32(DayType);
      }
      if (HasMonth) {
        output.WriteRawTag(32);
        output.WriteUInt32(Month);
      }
      if (HasPworkhome) {
        output.WriteRawTag(45);
        output.WriteFloat(Pworkhome);
      }
      if (HasPhomeother) {
        output.WriteRawTag(53);
        output.WriteFloat(Phomeother);
      }
      if (HasPwork) {
        output.WriteRawTag(61);
        output.WriteFloat(Pwork);
      }
      if (HasPschool) {
        output.WriteRawTag(69);
        output.WriteFloat(Pschool);
      }
      if (HasPshop) {
        output.WriteRawTag(77);
        output.WriteFloat(Pshop);
      }
      if (HasPservices) {
        output.WriteRawTag(85);
        output.WriteFloat(Pservices);
      }
      if (HasPleisure) {
        output.WriteRawTag(93);
        output.WriteFloat(Pleisure);
      }
      if (HasPescort) {
        output.WriteRawTag(101);
        output.WriteFloat(Pescort);
      }
      if (HasPtransport) {
        output.WriteRawTag(109);
        output.WriteFloat(Ptransport);
      }
      if (HasPhomeTotal) {
        output.WriteRawTag(117);
        output.WriteFloat(PhomeTotal);
      }
      if (HasPnothomeTotal) {
        output.WriteRawTag(125);
        output.WriteFloat(PnothomeTotal);
      }
      if (HasPunknownTotal) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(PunknownTotal);
      }
      if (HasPmwalk) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Pmwalk);
      }
      if (HasPmcycle) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Pmcycle);
      }
      if (HasPmprivate) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(Pmprivate);
      }
      if (HasPmpublic) {
        output.WriteRawTag(165, 1);
        output.WriteFloat(Pmpublic);
      }
      if (HasPmunknown) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(Pmunknown);
      }
      if (HasSex) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) Sex);
      }
      if (HasAge35G) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(Age35G);
      }
      if (HasNssec8) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) Nssec8);
      }
      if (HasPwkstat) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) Pwkstat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (HasWeekday) {
        output.WriteRawTag(16);
        output.WriteBool(Weekday);
      }
      if (HasDayType) {
        output.WriteRawTag(24);
        output.WriteInt32(DayType);
      }
      if (HasMonth) {
        output.WriteRawTag(32);
        output.WriteUInt32(Month);
      }
      if (HasPworkhome) {
        output.WriteRawTag(45);
        output.WriteFloat(Pworkhome);
      }
      if (HasPhomeother) {
        output.WriteRawTag(53);
        output.WriteFloat(Phomeother);
      }
      if (HasPwork) {
        output.WriteRawTag(61);
        output.WriteFloat(Pwork);
      }
      if (HasPschool) {
        output.WriteRawTag(69);
        output.WriteFloat(Pschool);
      }
      if (HasPshop) {
        output.WriteRawTag(77);
        output.WriteFloat(Pshop);
      }
      if (HasPservices) {
        output.WriteRawTag(85);
        output.WriteFloat(Pservices);
      }
      if (HasPleisure) {
        output.WriteRawTag(93);
        output.WriteFloat(Pleisure);
      }
      if (HasPescort) {
        output.WriteRawTag(101);
        output.WriteFloat(Pescort);
      }
      if (HasPtransport) {
        output.WriteRawTag(109);
        output.WriteFloat(Ptransport);
      }
      if (HasPhomeTotal) {
        output.WriteRawTag(117);
        output.WriteFloat(PhomeTotal);
      }
      if (HasPnothomeTotal) {
        output.WriteRawTag(125);
        output.WriteFloat(PnothomeTotal);
      }
      if (HasPunknownTotal) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(PunknownTotal);
      }
      if (HasPmwalk) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Pmwalk);
      }
      if (HasPmcycle) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Pmcycle);
      }
      if (HasPmprivate) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(Pmprivate);
      }
      if (HasPmpublic) {
        output.WriteRawTag(165, 1);
        output.WriteFloat(Pmpublic);
      }
      if (HasPmunknown) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(Pmunknown);
      }
      if (HasSex) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) Sex);
      }
      if (HasAge35G) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(Age35G);
      }
      if (HasNssec8) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) Nssec8);
      }
      if (HasPwkstat) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) Pwkstat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasWeekday) {
        size += 1 + 1;
      }
      if (HasDayType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DayType);
      }
      if (HasMonth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Month);
      }
      if (HasPworkhome) {
        size += 1 + 4;
      }
      if (HasPhomeother) {
        size += 1 + 4;
      }
      if (HasPwork) {
        size += 1 + 4;
      }
      if (HasPschool) {
        size += 1 + 4;
      }
      if (HasPshop) {
        size += 1 + 4;
      }
      if (HasPservices) {
        size += 1 + 4;
      }
      if (HasPleisure) {
        size += 1 + 4;
      }
      if (HasPescort) {
        size += 1 + 4;
      }
      if (HasPtransport) {
        size += 1 + 4;
      }
      if (HasPhomeTotal) {
        size += 1 + 4;
      }
      if (HasPnothomeTotal) {
        size += 1 + 4;
      }
      if (HasPunknownTotal) {
        size += 2 + 4;
      }
      if (HasPmwalk) {
        size += 2 + 4;
      }
      if (HasPmcycle) {
        size += 2 + 4;
      }
      if (HasPmprivate) {
        size += 2 + 4;
      }
      if (HasPmpublic) {
        size += 2 + 4;
      }
      if (HasPmunknown) {
        size += 2 + 4;
      }
      if (HasSex) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Sex);
      }
      if (HasAge35G) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Age35G);
      }
      if (HasNssec8) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Nssec8);
      }
      if (HasPwkstat) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Pwkstat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TimeUseDiary other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasWeekday) {
        Weekday = other.Weekday;
      }
      if (other.HasDayType) {
        DayType = other.DayType;
      }
      if (other.HasMonth) {
        Month = other.Month;
      }
      if (other.HasPworkhome) {
        Pworkhome = other.Pworkhome;
      }
      if (other.HasPhomeother) {
        Phomeother = other.Phomeother;
      }
      if (other.HasPwork) {
        Pwork = other.Pwork;
      }
      if (other.HasPschool) {
        Pschool = other.Pschool;
      }
      if (other.HasPshop) {
        Pshop = other.Pshop;
      }
      if (other.HasPservices) {
        Pservices = other.Pservices;
      }
      if (other.HasPleisure) {
        Pleisure = other.Pleisure;
      }
      if (other.HasPescort) {
        Pescort = other.Pescort;
      }
      if (other.HasPtransport) {
        Ptransport = other.Ptransport;
      }
      if (other.HasPhomeTotal) {
        PhomeTotal = other.PhomeTotal;
      }
      if (other.HasPnothomeTotal) {
        PnothomeTotal = other.PnothomeTotal;
      }
      if (other.HasPunknownTotal) {
        PunknownTotal = other.PunknownTotal;
      }
      if (other.HasPmwalk) {
        Pmwalk = other.Pmwalk;
      }
      if (other.HasPmcycle) {
        Pmcycle = other.Pmcycle;
      }
      if (other.HasPmprivate) {
        Pmprivate = other.Pmprivate;
      }
      if (other.HasPmpublic) {
        Pmpublic = other.Pmpublic;
      }
      if (other.HasPmunknown) {
        Pmunknown = other.Pmunknown;
      }
      if (other.HasSex) {
        Sex = other.Sex;
      }
      if (other.HasAge35G) {
        Age35G = other.Age35G;
      }
      if (other.HasNssec8) {
        Nssec8 = other.Nssec8;
      }
      if (other.HasPwkstat) {
        Pwkstat = other.Pwkstat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            Weekday = input.ReadBool();
            break;
          }
          case 24: {
            DayType = input.ReadInt32();
            break;
          }
          case 32: {
            Month = input.ReadUInt32();
            break;
          }
          case 45: {
            Pworkhome = input.ReadFloat();
            break;
          }
          case 53: {
            Phomeother = input.ReadFloat();
            break;
          }
          case 61: {
            Pwork = input.ReadFloat();
            break;
          }
          case 69: {
            Pschool = input.ReadFloat();
            break;
          }
          case 77: {
            Pshop = input.ReadFloat();
            break;
          }
          case 85: {
            Pservices = input.ReadFloat();
            break;
          }
          case 93: {
            Pleisure = input.ReadFloat();
            break;
          }
          case 101: {
            Pescort = input.ReadFloat();
            break;
          }
          case 109: {
            Ptransport = input.ReadFloat();
            break;
          }
          case 117: {
            PhomeTotal = input.ReadFloat();
            break;
          }
          case 125: {
            PnothomeTotal = input.ReadFloat();
            break;
          }
          case 133: {
            PunknownTotal = input.ReadFloat();
            break;
          }
          case 141: {
            Pmwalk = input.ReadFloat();
            break;
          }
          case 149: {
            Pmcycle = input.ReadFloat();
            break;
          }
          case 157: {
            Pmprivate = input.ReadFloat();
            break;
          }
          case 165: {
            Pmpublic = input.ReadFloat();
            break;
          }
          case 173: {
            Pmunknown = input.ReadFloat();
            break;
          }
          case 176: {
            Sex = (global::Synthpop.Sex) input.ReadEnum();
            break;
          }
          case 184: {
            Age35G = input.ReadUInt32();
            break;
          }
          case 192: {
            Nssec8 = (global::Synthpop.Nssec8) input.ReadEnum();
            break;
          }
          case 200: {
            Pwkstat = (global::Synthpop.PwkStat) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            Weekday = input.ReadBool();
            break;
          }
          case 24: {
            DayType = input.ReadInt32();
            break;
          }
          case 32: {
            Month = input.ReadUInt32();
            break;
          }
          case 45: {
            Pworkhome = input.ReadFloat();
            break;
          }
          case 53: {
            Phomeother = input.ReadFloat();
            break;
          }
          case 61: {
            Pwork = input.ReadFloat();
            break;
          }
          case 69: {
            Pschool = input.ReadFloat();
            break;
          }
          case 77: {
            Pshop = input.ReadFloat();
            break;
          }
          case 85: {
            Pservices = input.ReadFloat();
            break;
          }
          case 93: {
            Pleisure = input.ReadFloat();
            break;
          }
          case 101: {
            Pescort = input.ReadFloat();
            break;
          }
          case 109: {
            Ptransport = input.ReadFloat();
            break;
          }
          case 117: {
            PhomeTotal = input.ReadFloat();
            break;
          }
          case 125: {
            PnothomeTotal = input.ReadFloat();
            break;
          }
          case 133: {
            PunknownTotal = input.ReadFloat();
            break;
          }
          case 141: {
            Pmwalk = input.ReadFloat();
            break;
          }
          case 149: {
            Pmcycle = input.ReadFloat();
            break;
          }
          case 157: {
            Pmprivate = input.ReadFloat();
            break;
          }
          case 165: {
            Pmpublic = input.ReadFloat();
            break;
          }
          case 173: {
            Pmunknown = input.ReadFloat();
            break;
          }
          case 176: {
            Sex = (global::Synthpop.Sex) input.ReadEnum();
            break;
          }
          case 184: {
            Age35G = input.ReadUInt32();
            break;
          }
          case 192: {
            Nssec8 = (global::Synthpop.Nssec8) input.ReadEnum();
            break;
          }
          case 200: {
            Pwkstat = (global::Synthpop.PwkStat) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
